{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"Markup Language","mdn_url":"/en-US/docs/Learn/Framework/MarkupLanguage","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p><strong>Markup Language</strong>，又称<strong>标记语言</strong>，它定义了需要显示的内容的结构，也是整个小程序所能够渲染的基础。</p>\n<p>它使用标记去描述页面和文本，而标记主要包含组件、控制、表达式。</p>\n<p>其中组件主要有 <code>view</code>, <code>text</code>, <code>input</code>, <code>textarea</code>, <code>swiper</code> 等。不同组件有着不同的功能和用处，灵活配合使用可以构建出各式各样的应用。</p>\n<p>在使用组件的过程中，需要用 <code>&lt;</code> 和 <code>&gt;</code> 包裹其名称，并且包含开始和结束标签，结束标签需要使用 <code>&lt;/</code> 和 <code>&gt;</code> 包裹，例如 <code>&lt;view&gt;&lt;/view&gt;</code>。所有组件的名称是大小写不敏感，因此使用 <code>&lt;INPUT&gt;&lt;/INPUT&gt;</code> 也是合法的。但通常推荐使用小写的组件名称。</p>\n<p>表达式标记会使用数据和表达式来渲染文本内容，通常被 <code>{{</code> 和 <code>}}</code> 所包裹，例如 <code>{{name}}</code> 会将上下文中的 <code>name</code> 变量渲染到这个位置。</p>\n<p>控制标志则是根据数据控制组件的显示、重复等等，例如 <code>:for</code>, <code>:if</code> 属性。</p>"}}],"toc":[],"summary":"Markup Language，又称标记语言，它定义了需要显示的内容的结构，也是整个小程序所能够渲染的基础。","popularity":0,"modified":null,"other_translations":[{"title":"Markup Language","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/learn/framework/markuplanguage","github_url":"https://github.com/mdn/translated-content/blob/main/files/en-us/learn/framework/markuplanguage/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/null","filename":"index.md"},"short_title":"Markup Language","parents":[{"uri":"/en-US/docs/Learn/Framework/MarkupLanguage","title":"Markup Language"}],"pageTitle":"Markup Language | MDN","noIndexing":false}}