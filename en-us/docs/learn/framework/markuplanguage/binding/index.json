{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{"broken_links":[{"explanation":"Can't resolve https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Addition","id":"link1","href":"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Addition","suggestion":"/en-US/docs/Web/JavaScript/Reference/Operators/Addition","fixable":true,"line":90,"column":254}]},"title":"Data Binding","mdn_url":"/en-US/docs/Learn/Framework/MarkupLanguage/Binding","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":"text","title":"text","isH3":false,"content":"<p>The most common way of data binding is through the double curly brace syntax, <code>{{</code> and <code>}}</code>. The internal leading and trailing spaces are optional.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">&gt;</span></span>{{ message }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>When the developer sets <code>message</code> to not be a string, the framework will render <code>message</code> as text whenever possible:</p>\n<ul>\n  <li>If <code>undefined</code>, render empty.</li>\n  <li>If it is an array, render as the corresponding number.</li>\n  <li>If boolean, render as <code>true</code> or <code>false</code>.</li>\n  <li>If an object, render as <code>[object Object]</code>.</li>\n  <li>If it is an array, render as the result of Array.prototype.join merged.</li>\n</ul>"}},{"type":"prose","value":{"id":"attributes","title":"Attributes","isH3":false,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token comment\">&lt;!-- Double quotes around the variable --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>item-{{id}}<span class=\"token punctuation\">\"</span></span> <span class=\"token special-attr\"><span class=\"token attr-name\">style</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token value css language-css\"><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>styles<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">\"</span></span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"boolean_properties","title":"boolean properties","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token comment\">&lt;!-- means true --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox</span> <span class=\"token attr-name\">checked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{true}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- means false --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox</span> <span class=\"token attr-name\">checked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{false}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- error: cannot use true/false for strings, both are true --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox</span> <span class=\"token attr-name\">checked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>false<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox</span> <span class=\"token attr-name\">checked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>true<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>In addition to using the standard method, in cases where it is clear that only <code>true</code> is required, it can be abbreviated as follows.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token comment\">&lt;!-- Equivalent to checked=\"{{true}}\" --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox</span> <span class=\"token attr-name\">checked</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- error: cannot be null, actually false --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>checkbox</span> <span class=\"token attr-name\">checked</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>checkbox</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"object_properties","title":"Object Properties","isH3":true,"content":"<p>Some components need to obtain data types other than strings and Booleans, such as objects, arrays, etc. In this case, any binding syntax for string concatenation cannot be used.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token comment\">&lt;!-- Data binding braces cannot have any spaces before and after --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>picker</span> <span class=\"token attr-name\">range</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{range}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>picker</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- errors, all are incorrect, at this time range receives a string instead of an array --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>picker</span> <span class=\"token attr-name\">range</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span> {{range}} <span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>picker</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>picker</span> <span class=\"token attr-name\">range</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>value-{{range}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>picker</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<blockquote>\n  <p>When there are spaces before and after the attribute, the string will be concatenated automatically, resulting in the final value assigned to the attribute as a string instead of the value of the expression itself.</p>\n</blockquote>"}},{"type":"prose","value":{"id":"operation","title":"operation","isH3":false,"content":"<p>Simple operations can be performed in <code>{{ }}</code>. Most of the operation rules and logic are consistent with the JavaScript syntax. The following methods are supported:</p>"}},{"type":"prose","value":{"id":"ternary_operations","title":"Ternary operations","isH3":true,"content":"<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">hidden</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{flag ? true : false}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>Hidden<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"numerical_operations","title":"Numerical operations","isH3":true,"content":"<p>The <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, and bracket <code>(</code> <code>)</code> operators are supported.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">&gt;</span></span>{{a + b}} + {{c}} + d<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"string_operations","title":"String operations","isH3":true,"content":"<p>Use the <code>+</code> operator to concatenate strings at both ends.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">&gt;</span></span>{{\"hello\" + name}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<blockquote>\n  <p>Due to the characteristics of the JS language, whether the <code>+</code> operator is a string concatenation or a numerical calculation depends on the difference of the value types on both sides, so you need to pay attention when using it. Specific rules can be <a href=\"/en-US/docs/Web/JavaScript/Reference/Operators/Addition\" data-flaw=\"link1\">see MDN</a></p>\n</blockquote>"}},{"type":"prose","value":{"id":"object_indexing_operations","title":"Object indexing operations","isH3":true,"content":"<p>Similar to JS, use the <code>.</code> operator or the <code>[ ]</code> operator to access object or array property values.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">&gt;</span></span>{{object.key}} {{array[0]}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"logical_operators","title":"Logical Operators","isH3":true,"content":"<p>Support <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code>, <code>!=</code>, <code>!==</code>, <code>==</code>, <code>===</code> operators, the rules are consistent with JS</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>if</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{length &gt; 5}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<blockquote>\n  <p>Usually used with ternary expressions</p>\n</blockquote>"}},{"type":"prose","value":{"id":"literal","title":"literal","isH3":false,"content":"<p>Support direct use of literals within curly braces instead of variables</p>"}},{"type":"prose","value":{"id":"array","title":"array","isH3":true,"content":"<p>Use <code>[</code>, <code>]</code> to create array literals.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{[zero, 1, 2, 3, 4]}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>{{item}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"objects","title":"objects","isH3":true,"content":"<p>Use <code>{</code>, <code>}</code> inside data binding to create object literals.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>picker</span> <span class=\"token attr-name\">range</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{[{a: 1}, {b: 2}]}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>picker</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>Supports some ES6 object operators and capabilities, such as the <code>...</code> spread operator and object property shorthand.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>picker</span> <span class=\"token attr-name\">range</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{[{...foo, a}, {...bar, b}]}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>picker</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>But note that there is an exception, in the object binding syntax of the <code>data</code> property in <code>template</code>, the outermost <code>{</code>, <code>}</code> needs to be omitted.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span> <span class=\"token attr-name\">data</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{foo: a, bar: {a: 1}}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token comment\">&lt;!-- error: outermost object cannot add { } --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>template</span> <span class=\"token attr-name\">data</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{{foo: a, bar: {a: 1}}}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>template</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>The purpose of this is to ensure that <code>data</code> will always receive an object, rather than other types of values ​​such as arrays.</p>"}}],"toc":[{"text":"text","id":"text"},{"text":"Attributes","id":"attributes"},{"text":"operation","id":"operation"},{"text":"literal","id":"literal"}],"summary":"The most common way of data binding is through the double curly brace syntax, {{ and }}. The internal leading and trailing spaces are optional.","popularity":0,"modified":null,"other_translations":[{"title":"数据绑定","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/learn/framework/markuplanguage/binding","github_url":"https://github.com/mdn/translated-content/blob/main/files/en-us/learn/framework/markuplanguage/binding/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/null","filename":"index.md"},"short_title":"Data Binding","parents":[{"uri":"/en-US/docs/Learn/Framework/MarkupLanguage","title":"Markup Language"},{"uri":"/en-US/docs/Learn/Framework/MarkupLanguage/Binding","title":"Data Binding"}],"pageTitle":"Data Binding | MDN","noIndexing":false}}