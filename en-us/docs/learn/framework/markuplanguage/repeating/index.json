{"doc":{"isMarkdown":true,"isTranslated":true,"isActive":true,"flaws":{},"title":"List rendering","mdn_url":"/en-US/docs/Learn/Framework/MarkupLanguage/Repeating","locale":"en-US","native":"English (US)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  We often need to render lists, at this time we can use <code>tt:for</code> on the tags that need to be repeated.\n  By default, the current index <code>index</code> variable and the current value <code>item</code> variable are created in scope.\n</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{array}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>{{index}}: {{item.message}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<blockquote>\n  <p><code>tt:for=\"{{array}}\"</code> cannot be shortened to <code>tt:for=\"array\"</code> nor can you add any other strings around <code>{{ }}</code>, otherwise it will be considered Looping over strings instead of arrays produces unexpected behavior.</p>\n</blockquote>"}},{"type":"prose","value":{"id":"custom_loop_variable_name","title":"custom loop variable name","isH3":false,"content":"<p>\n  When there are multiple nested loops, the inner <code>index</code>/<code>item</code> variables override the outer ones by default. When you want to access external variables internally, you can use <code>tt:for-item</code> to modify the variable name of the current loop element and <code>tt:for-index</code> to modify the variable name of the current loop subscript.\n  It can also be used to modify the default variable names for single-level loops.\n</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{array}}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for-index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>idx<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for-item</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>itemName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>{{idx}}: {{itemName.message}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<blockquote>\n  <p><code>tt:for-item</code> and <code>tt:for-index</code> do not support dynamic interpolation expressions, only strings</p>\n</blockquote>"}},{"type":"prose","value":{"id":"multi-node_rendering","title":"Multi-node rendering","isH3":false,"content":"<p>Use tt:for on a <code>&lt;block/&gt;</code> tag to render a multi-node struct block. The <code>&lt;block/&gt;</code> tag does not generate an actual tag.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>block</span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{[1, 2, 3]}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>{{index}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>{{item}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>block</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"status_maintenance","title":"Status maintenance","isH3":false,"content":"<p>By default, when the list is updated, it will try to reuse the previous components according to the index position. This pattern is the most efficient, but only works for list loops that don't rely on child component state or temporary label state (such as the value of an input ).</p>\n<p>TTML can be notified via <code>tt:key</code> so that it can track the state of each node.</p>\n<p>The value of <code>tt:key</code> is provided in two forms:</p>\n<ol>\n  <li>String, representing a property of item in the array of the for loop. The value of the property needs to be a unique string or number in the list, and interpolation expressions are not supported.</li>\n  <li>The reserved keyword <code>*this</code> represents the item itself in the for loop. This representation requires the item itself to be a unique string or number.</li>\n</ol>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>some-component</span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{array}}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>some-component</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"loop_through_characters","title":"loop through characters","isH3":false,"content":"<p>When <code>tt:for</code> receives a string, it will loop by characters. Where <code>item</code> represents the current character, and <code>index</code> represents the index of the position where the character is located.</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hello<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>{{item}}-<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>It will be rendered as <code>h-e-l-l-o-</code> according to the input string.</p>"}}],"toc":[{"text":"custom loop variable name","id":"custom_loop_variable_name"},{"text":"Multi-node rendering","id":"multi-node_rendering"},{"text":"Status maintenance","id":"status_maintenance"},{"text":"loop through characters","id":"loop_through_characters"}],"summary":"We often need to render lists, at this time we can use tt:for on the tags that need to be repeated.\n  By default, the current index index variable and the current value item variable are created in scope.","popularity":0,"modified":null,"other_translations":[{"title":"列表渲染","locale":"zh-CN","native":"中文 (简体)"}],"source":{"folder":"en-us/learn/framework/markuplanguage/repeating","github_url":"https://github.com/mdn/translated-content/blob/main/files/en-us/learn/framework/markuplanguage/repeating/index.md","last_commit_url":"https://github.com/mdn/translated-content/commit/null","filename":"index.md"},"short_title":"List rendering","parents":[{"uri":"/en-US/docs/Learn/Framework/MarkupLanguage","title":"Markup Language"},{"uri":"/en-US/docs/Learn/Framework/MarkupLanguage/Repeating","title":"List rendering"}],"pageTitle":"List rendering | MDN","noIndexing":false}}