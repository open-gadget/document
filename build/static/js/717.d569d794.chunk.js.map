{"version":3,"file":"static/js/717.d569d794.chunk.js","mappings":"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","sources":["site-search/form.tsx","site-search/utils.tsx","../../libs/languages/index.js"],"sourcesContent":["import React from \"react\";\nimport { Link, useSearchParams } from \"react-router-dom\";\nimport LANGUAGES_RAW from \"../../../libs/languages\";\n\nimport { useLocale } from \"../hooks\";\nimport { appendURL } from \"./utils\";\n\nconst LANGUAGES = new Map(\n  Object.entries(LANGUAGES_RAW).map(([locale, data]) => {\n    return [locale.toLowerCase(), data];\n  })\n);\n\nexport default function SiteSearchForm() {\n  const locale = useLocale();\n  const [searchParams] = useSearchParams();\n  const queryLocales = searchParams.getAll(\"locale\");\n\n  const showLanguageOptions = locale.toLowerCase() !== \"en-us\";\n  const showAdvancedOptions = showLanguageOptions;\n\n  if (!showAdvancedOptions) {\n    return null;\n  }\n\n  return (\n    <div className=\"advanced-options\">\n      {/* Language only applies if you're browsing in, say, French\n      and want to search in English too. */}\n      {showLanguageOptions && (\n        <div className=\"language-options\">\n          <h2>Language:</h2>\n          <ul className=\"language-option-list\">\n            <li>\n              {!queryLocales.length ||\n              (queryLocales.length === 1 &&\n                equalLocales(queryLocales, [locale])) ? (\n                <i>\n                  {LANGUAGES.get(locale.toLowerCase())?.native} (\n                  {LANGUAGES.get(locale.toLowerCase())?.English})\n                </i>\n              ) : (\n                <Link\n                  to={`?${appendURL(searchParams, {\n                    locale: [locale],\n                    page: undefined,\n                  })}`}\n                >\n                  {LANGUAGES.get(locale.toLowerCase())?.native} (\n                  {LANGUAGES.get(locale.toLowerCase())?.English})\n                </Link>\n              )}\n            </li>\n            <li>\n              {queryLocales.length && equalLocales(queryLocales, [\"en-us\"]) ? (\n                <i>{LANGUAGES.get(\"en-us\")?.native}</i>\n              ) : (\n                <Link\n                  to={`?${appendURL(searchParams, {\n                    locale: [\"en-US\"],\n                    page: undefined,\n                  })}`}\n                >\n                  {LANGUAGES.get(\"en-us\")?.native}\n                </Link>\n              )}\n            </li>\n            <li>\n              {queryLocales.length === 2 &&\n              equalLocales(queryLocales, [locale, \"en-us\"]) ? (\n                <i>Both</i>\n              ) : (\n                <Link\n                  to={`?${appendURL(searchParams, {\n                    locale: [locale, \"en-US\"],\n                    page: undefined,\n                  })}`}\n                >\n                  Both\n                </Link>\n              )}\n            </li>\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n}\n\n// Return true if two arrays, independent of case and order are equal.\n// E.g. `['foo', 'Bar']` is equal to `['bar', 'FoO']`\nfunction equalLocales(list1: string[], list2: string[]) {\n  if (list1.length !== list2.length) {\n    return false;\n  }\n  const list1LC = list1.map((x) => x.toLowerCase());\n  const list2LC = list2.map((x) => x.toLowerCase());\n  return list1LC.every((x) => list2LC.includes(x));\n}\n","import { createSearchParams, URLSearchParamsInit } from \"react-router-dom\";\n\nexport function appendURL(\n  searchParams: URLSearchParamsInit,\n  overrides: Record<string, string | string[] | undefined>\n) {\n  const sp = createSearchParams(searchParams);\n  Object.entries(overrides).forEach(([key, value]) => {\n    if (Array.isArray(value)) {\n      sp.delete(key);\n      value.forEach((v) => sp.append(key, v));\n    } else if (value === undefined) {\n      sp.delete(key);\n    } else {\n      sp.set(key, value);\n    }\n  });\n  return sp;\n}\n","module.exports = {\n  ach: {\n    English: \"Acholi\",\n    native: \"Acholi\",\n  },\n  ak: {\n    English: \"Akan\",\n    native: \"Akan\",\n  },\n  \"am-et\": {\n    English: \"Amharic\",\n    native: \"\\u12a0\\u121b\\u122d\\u129b\",\n  },\n  an: {\n    English: \"Aragonese\",\n    native: \"aragon\\u00e9s\",\n  },\n  ar: {\n    English: \"Arabic\",\n    native: \"\\u0639\\u0631\\u0628\\u064a\",\n  },\n  as: {\n    English: \"Assamese\",\n    native: \"\\u0985\\u09b8\\u09ae\\u09c0\\u09af\\u09bc\\u09be\",\n  },\n  ast: {\n    English: \"Asturian\",\n    native: \"Asturianu\",\n  },\n  azz: {\n    English: \"Highland Puebla Nahuatl\",\n    native: \"nahuatl sierra norte Puebla\",\n  },\n  be: {\n    English: \"Belarusian\",\n    native: \"\\u0411\\u0435\\u043b\\u0430\\u0440\\u0443\\u0441\\u043a\\u0430\\u044f\",\n  },\n  bg: {\n    English: \"Bulgarian\",\n    native: \"\\u0411\\u044a\\u043b\\u0433\\u0430\\u0440\\u0441\\u043a\\u0438\",\n  },\n  bm: {\n    English: \"Bambara\",\n    native: \"Bamanankan\",\n  },\n  bn: {\n    English: \"Bengali\",\n    native: \"\\u09ac\\u09be\\u0982\\u09b2\\u09be\",\n  },\n  br: {\n    English: \"Breton\",\n    native: \"Brezhoneg\",\n  },\n  brx: {\n    English: \"Bodo\",\n    native: \"\\u092c\\u0930'\",\n  },\n  bs: {\n    English: \"Bosnian\",\n    native: \"Bosanski\",\n  },\n  ca: {\n    English: \"Catalan\",\n    native: \"Catal\\u00e0\",\n  },\n  \"ca-valencia\": {\n    English: \"Catalan (Valencian)\",\n    native: \"catal\\u00e0 (valenci\\u00e0)\",\n  },\n  cak: {\n    English: \"Kaqchikel\",\n    native: \"Maya Kaqchikel\",\n  },\n  csb: {\n    English: \"Kashubian\",\n    native: \"Kasz\\u00ebbsczi\",\n  },\n  cy: {\n    English: \"Welsh\",\n    native: \"Cymraeg\",\n  },\n  da: {\n    English: \"Danish\",\n    native: \"Dansk\",\n  },\n  dbg: {\n    English: \"Debug Robot\",\n    native: \"\\u1e12\\u1e17\\u0180\\u016d\\u0260 \\u0158\\u01ff\\u0180\\u01ff\\u0167\",\n  },\n  de: {\n    English: \"German\",\n    native: \"Deutsch\",\n  },\n  \"de-AT\": {\n    English: \"German (Austria)\",\n    native: \"Deutsch (\\u00d6sterreich)\",\n  },\n  \"de-CH\": {\n    English: \"German (Switzerland)\",\n    native: \"Deutsch (Schweiz)\",\n  },\n  \"de-DE\": {\n    English: \"German (Germany)\",\n    native: \"Deutsch (Deutschland)\",\n  },\n  dsb: {\n    English: \"Lower Sorbian\",\n    native: \"Dolnoserb\\u0161\\u0107ina\",\n  },\n  el: {\n    English: \"Greek\",\n    native: \"\\u0395\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ac\",\n  },\n  \"en-AU\": {\n    English: \"English (Australian)\",\n    native: \"English (Australian)\",\n  },\n  \"en-CA\": {\n    English: \"English (Canadian)\",\n    native: \"English (Canadian)\",\n  },\n  \"en-GB\": {\n    English: \"English (British)\",\n    native: \"English (British)\",\n  },\n  \"en-NZ\": {\n    English: \"English (New Zealand)\",\n    native: \"English (New Zealand)\",\n  },\n  \"en-US\": {\n    English: \"English (US)\",\n    native: \"English (US)\",\n  },\n  \"en-ZA\": {\n    English: \"English (South African)\",\n    native: \"English (South African)\",\n  },\n  eo: {\n    English: \"Esperanto\",\n    native: \"Esperanto\",\n  },\n  es: {\n    English: \"Spanish\",\n    native: \"Espa\\u00f1ol\",\n  },\n  \"es-AR\": {\n    English: \"Spanish (Argentina)\",\n    native: \"Espa\\u00f1ol (de Argentina)\",\n  },\n  \"es-CL\": {\n    English: \"Spanish (Chile)\",\n    native: \"Espa\\u00f1ol (de Chile)\",\n  },\n  \"es-ES\": {\n    English: \"Spanish (Spain)\",\n    native: \"Espa\\u00f1ol (de Espa\\u00f1a)\",\n  },\n  \"es-MX\": {\n    English: \"Spanish (Mexico)\",\n    native: \"Espa\\u00f1ol (de M\\u00e9xico)\",\n  },\n  et: {\n    English: \"Estonian\",\n    native: \"Eesti keel\",\n  },\n  eu: {\n    English: \"Basque\",\n    native: \"Euskara\",\n  },\n  fa: {\n    English: \"Persian\",\n    native: \"\\u0641\\u0627\\u0631\\u0633\\u06cc\",\n  },\n  fi: {\n    English: \"Finnish\",\n    native: \"suomi\",\n  },\n  \"fj-FJ\": {\n    English: \"Fijian\",\n    native: \"Vosa vaka-Viti\",\n  },\n  fr: {\n    English: \"French\",\n    native: \"Fran\\u00e7ais\",\n  },\n  \"fur-IT\": {\n    English: \"Friulian\",\n    native: \"Furlan\",\n  },\n  ga: {\n    English: \"Irish\",\n    native: \"Gaeilge\",\n  },\n  gd: {\n    English: \"Gaelic (Scotland)\",\n    native: \"G\\u00e0idhlig\",\n  },\n  gl: {\n    English: \"Galician\",\n    native: \"Galego\",\n  },\n  gn: {\n    English: \"Guarani\",\n    native: \"Ava\\u00f1e'\\u1ebd\",\n  },\n  gu: {\n    English: \"Gujarati\",\n    native: \"\\u0a97\\u0ac1\\u0a9c\\u0ab0\\u0abe\\u0aa4\\u0ac0\",\n  },\n  \"gu-IN\": {\n    English: \"Gujarati (India)\",\n    native:\n      \"\\u0a97\\u0ac1\\u0a9c\\u0ab0\\u0abe\\u0aa4\\u0ac0 (\\u0aad\\u0abe\\u0ab0\\u0aa4)\",\n  },\n  he: {\n    English: \"Hebrew\",\n    native: \"\\u05e2\\u05d1\\u05e8\\u05d9\\u05ea\",\n  },\n  hi: {\n    English: \"Hindi\",\n    native: \"\\u0939\\u093f\\u0928\\u094d\\u0926\\u0940\",\n  },\n  \"hi-IN\": {\n    English: \"Hindi (India)\",\n    native: \"\\u0939\\u093f\\u0928\\u094d\\u0926\\u0940 (\\u092d\\u093e\\u0930\\u0924)\",\n  },\n  hsb: {\n    English: \"Upper Sorbian\",\n    native: \"Hornjoserbsce\",\n  },\n  hu: {\n    English: \"Hungarian\",\n    native: \"magyar\",\n  },\n  \"hy-AM\": {\n    English: \"Armenian\",\n    native: \"\\u0540\\u0561\\u0575\\u0565\\u0580\\u0565\\u0576\",\n  },\n  ia: {\n    English: \"Interlingua\",\n    native: \"Interlingua\",\n  },\n  id: {\n    English: \"Indonesian\",\n    native: \"Bahasa Indonesia\",\n  },\n  is: {\n    English: \"Icelandic\",\n    native: \"\\u00edslenska\",\n  },\n  it: {\n    English: \"Italian\",\n    native: \"Italiano\",\n  },\n  ja: {\n    English: \"Japanese\",\n    native: \"\\u65e5\\u672c\\u8a9e\",\n  },\n  \"ja-JP-mac\": {\n    English: \"Japanese\",\n    native: \"\\u65e5\\u672c\\u8a9e\",\n  },\n  kab: {\n    English: \"Kabyle\",\n    native: \"Taqbaylit\",\n  },\n  kk: {\n    English: \"Kazakh\",\n    native: \"\\u049a\\u0430\\u0437\\u0430\\u049b\",\n  },\n  km: {\n    English: \"Khmer\",\n    native: \"\\u1781\\u17d2\\u1798\\u17c2\\u179a\",\n  },\n  kn: {\n    English: \"Kannada\",\n    native: \"\\u0c95\\u0ca8\\u0ccd\\u0ca8\\u0ca1\",\n  },\n  ko: {\n    English: \"Korean\",\n    native: \"\\ud55c\\uad6d\\uc5b4\",\n  },\n  kok: {\n    English: \"Konkani\",\n    native: \"\\u0915\\u094b\\u0902\\u0915\\u0928\\u0940\",\n  },\n  ku: {\n    English: \"Kurdish\",\n    native: \"Kurd\\u00ee\",\n  },\n  ks: {\n    English: \"Kashmiri\",\n    native: \"\\u0643\\u0634\\u0645\\u06cc\\u0631\\u06cc\",\n  },\n  la: {\n    English: \"Latin\",\n    native: \"Latina\",\n  },\n  lg: {\n    English: \"Luganda\",\n    native: \"Luganda\",\n  },\n  lij: {\n    English: \"Ligurian\",\n    native: \"Ligure\",\n  },\n  lo: {\n    English: \"Lao\",\n    native: \"\\u0e9e\\u0eb2\\u0eaa\\u0eb2\\u0ea5\\u0eb2\\u0ea7\",\n  },\n  lt: {\n    English: \"Lithuanian\",\n    native: \"Lietuvi\\u0173\",\n  },\n  ltg: {\n    English: \"Latgalian\",\n    native: \"Latgalie\\u0161u valoda\",\n  },\n  lv: {\n    English: \"Latvian\",\n    native: \"Latvie\\u0161u\",\n  },\n  mai: {\n    English: \"Maithili\",\n    native:\n      \"\\u092e\\u0948\\u0925\\u093f\\u0932\\u0940 \\u09ae\\u09c8\\u09a5\\u09bf\\u09b2\\u09c0\",\n  },\n  mi: {\n    English: \"Maori (Aotearoa)\",\n    native: \"M\\u0101ori (Aotearoa)\",\n  },\n  mk: {\n    English: \"Macedonian\",\n    native: \"\\u041c\\u0430\\u043a\\u0435\\u0434\\u043e\\u043d\\u0441\\u043a\\u0438\",\n  },\n  mn: {\n    English: \"Mongolian\",\n    native: \"\\u041c\\u043e\\u043d\\u0433\\u043e\\u043b\",\n  },\n  mr: {\n    English: \"Marathi\",\n    native: \"\\u092e\\u0930\\u093e\\u0920\\u0940\",\n  },\n  ms: {\n    English: \"Malay\",\n    native: \"Melayu\",\n  },\n  my: {\n    English: \"Burmese\",\n    native: \"\\u1019\\u103c\\u1014\\u103a\\u1019\\u102c\\u1018\\u102c\\u101e\\u102c\",\n  },\n  \"nb-NO\": {\n    English: \"Norwegian (Bokm\\u00e5l)\",\n    native: \"Norsk bokm\\u00e5l\",\n  },\n  \"ne-NP\": {\n    English: \"Nepali\",\n    native: \"\\u0928\\u0947\\u092a\\u093e\\u0932\\u0940\",\n  },\n  \"nn-NO\": {\n    English: \"Norwegian (Nynorsk)\",\n    native: \"Norsk nynorsk\",\n  },\n  nl: {\n    English: \"Dutch\",\n    native: \"Nederlands\",\n  },\n  nr: {\n    English: \"Ndebele, South\",\n    native: \"isiNdebele\",\n  },\n  nso: {\n    English: \"Northern Sotho\",\n    native: \"Sepedi\",\n  },\n  oc: {\n    English: \"Occitan (Lengadocian)\",\n    native: \"occitan (lengadocian)\",\n  },\n  or: {\n    English: \"Odia\",\n    native: \"\\u0b13\\u0b21\\u0b3c\\u0b3f\\u0b06\",\n  },\n  pa: {\n    English: \"Punjabi\",\n    native: \"\\u0a2a\\u0a70\\u0a1c\\u0a3e\\u0a2c\\u0a40\",\n  },\n  \"pa-IN\": {\n    English: \"Punjabi (India)\",\n    native: \"\\u0a2a\\u0a70\\u0a1c\\u0a3e\\u0a2c\\u0a40 (\\u0a2d\\u0a3e\\u0a30\\u0a24)\",\n  },\n  pl: {\n    English: \"Polish\",\n    native: \"Polski\",\n  },\n  \"pt-BR\": {\n    English: \"Portuguese (Brazilian)\",\n    native: \"Portugu\\u00eas (do\\u00a0Brasil)\",\n  },\n  \"pt-PT\": {\n    English: \"Portuguese (Portugal)\",\n    native: \"Portugu\\u00eas (Europeu)\",\n  },\n  rm: {\n    English: \"Romansh\",\n    native: \"rumantsch\",\n  },\n  ru: {\n    English: \"Russian\",\n    native: \"\\u0420\\u0443\\u0441\\u0441\\u043a\\u0438\\u0439\",\n  },\n  rw: {\n    English: \"Kinyarwanda\",\n    native: \"Ikinyarwanda\",\n  },\n  sa: {\n    English: \"Sanskrit\",\n    native: \"\\u0938\\u0902\\u0938\\u094d\\u0915\\u0943\\u0924\",\n  },\n  sat: {\n    English: \"Santali\",\n    native: \"\\u0938\\u0902\\u0924\\u093e\\u0932\\u0940\",\n  },\n  sah: {\n    English: \"Sakha\",\n    native: \"\\u0421\\u0430\\u0445\\u0430\\u043b\\u044b\\u044b\",\n  },\n  si: {\n    English: \"Sinhala\",\n    native: \"\\u0dc3\\u0dd2\\u0d82\\u0dc4\\u0dbd\",\n  },\n  sk: {\n    English: \"Slovak\",\n    native: \"sloven\\u010dina\",\n  },\n  sl: {\n    English: \"Slovenian\",\n    native: \"Sloven\\u0161\\u010dina\",\n  },\n  \"sr-Cyrl\": {\n    English: \"Serbian\",\n    native: \"\\u0421\\u0440\\u043f\\u0441\\u043a\\u0438\",\n  },\n  ss: {\n    English: \"Siswati\",\n    native: \"siSwati\",\n  },\n  st: {\n    English: \"Southern Sotho\",\n    native: \"Sesotho\",\n  },\n  \"sv-SE\": {\n    English: \"Swedish\",\n    native: \"Svenska\",\n  },\n  \"ta-IN\": {\n    English: \"Tamil (India)\",\n    native:\n      \"\\u0ba4\\u0bae\\u0bbf\\u0bb4\\u0bcd (\\u0b87\\u0ba8\\u0bcd\\u0ba4\\u0bbf\\u0baf\\u0bbe)\",\n  },\n  \"ta-LK\": {\n    English: \"Tamil (Sri Lanka)\",\n    native:\n      \"\\u0ba4\\u0bae\\u0bbf\\u0bb4\\u0bcd (\\u0b87\\u0bb2\\u0b99\\u0bcd\\u0b95\\u0bc8)\",\n  },\n  th: {\n    English: \"Thai\",\n    native: \"\\u0e44\\u0e17\\u0e22\",\n  },\n  tr: {\n    English: \"Turkish\",\n    native: \"T\\u00fcrk\\u00e7e\",\n  },\n  trs: {\n    English: \"Triqui\",\n    native: \"Triqui\",\n  },\n  ts: {\n    English: \"Tsonga\",\n    native: \"Xitsonga\",\n  },\n  tsz: {\n    English: \"Pur\\u00e9pecha\",\n    native: \"Pur\\u00e9pecha\",\n  },\n  \"tt-RU\": {\n    English: \"Tatar\",\n    native: \"Tatar\\u00e7a\",\n  },\n  uk: {\n    English: \"Ukrainian\",\n    native: \"\\u0423\\u043a\\u0440\\u0430\\u0457\\u043d\\u0441\\u044c\\u043a\\u0430\",\n  },\n  ur: {\n    English: \"Urdu\",\n    native: \"\\u0627\\u064f\\u0631\\u062f\\u0648\",\n  },\n  uz: {\n    English: \"Uzbek\",\n    native: \"O\\u02bbzbek tili\",\n  },\n  ve: {\n    English: \"Venda\",\n    native: \"Tshiven\\u1e13a\",\n  },\n  vi: {\n    English: \"Vietnamese\",\n    native: \"Ti\\u1ebfng Vi\\u1ec7t\",\n  },\n  \"x-testing\": {\n    English: \"Testing\",\n    native: \"\\u0166\\u1e17\\u015f\\u0167\\u012b\\u019e\\u0260\",\n  },\n  \"zh-CN\": {\n    English: \"Chinese (Simplified)\",\n    native: \"\\u4e2d\\u6587 (\\u7b80\\u4f53)\",\n  },\n  \"zh-TW\": {\n    English: \"Chinese (Traditional)\",\n    native: \"\\u6b63\\u9ad4\\u4e2d\\u6587 (\\u7e41\\u9ad4)\",\n  },\n};\n"],"names":["LANGUAGES","Map","Object","entries","LANGUAGES_RAW","map","locale","data","toLowerCase","SiteSearchForm","useLocale","useSearchParams","searchParams","queryLocales","getAll","showLanguageOptions","className","length","equalLocales","get","native","English","to","appendURL","page","undefined","list1","list2","list1LC","x","list2LC","every","includes","overrides","sp","createSearchParams","forEach","key","value","Array","isArray","delete","v","append","set","module","exports","ach","ak","an","ar","as","ast","azz","be","bg","bm","bn","br","brx","bs","ca","cak","csb","cy","da","dbg","de","dsb","el","eo","es","et","eu","fa","fi","fr","ga","gd","gl","gn","gu","he","hi","hsb","hu","ia","id","is","it","ja","kab","kk","km","kn","ko","kok","ku","ks","la","lg","lij","lo","lt","ltg","lv","mai","mi","mk","mn","mr","ms","my","nl","nr","nso","oc","or","pa","pl","rm","ru","rw","sa","sat","sah","si","sk","sl","ss","st","th","tr","trs","ts","tsz","uk","ur","uz","ve","vi"],"sourceRoot":""}