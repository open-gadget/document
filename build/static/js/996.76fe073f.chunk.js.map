{"version":3,"file":"static/js/996.76fe073f.chunk.js","mappings":"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","sources":["document/toolbar/edit-actions.tsx","document/toolbar/flaws.tsx","document/toolbar/index.tsx","flaw-utils.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { CRUD_MODE_HOSTNAMES } from \"../../env\";\nimport { Source } from \"../types\";\n\nimport \"./edit-actions.scss\";\n\nexport function EditActions({ source }: { source: Source }) {\n  const { folder, filename, github_url } = source;\n\n  const [opening, setOpening] = useState(false);\n  const [editorOpeningError, setEditorOpeningError] = useState<Error | null>(\n    null\n  );\n\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(false);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  async function openInEditorHandler(event: React.MouseEvent) {\n    event.preventDefault();\n\n    const filepath = `${folder}/${filename}`;\n    console.log(`Going to try to open ${filepath} in your editor`);\n    setOpening(true);\n    try {\n      const response = await fetch(`/_open?filepath=${filepath}`);\n      if (!response.ok) {\n        if (response.status >= 500) {\n          setEditorOpeningError(\n            new Error(`${response.status}: ${response.statusText}`)\n          );\n        } else {\n          const body = await response.text();\n          setEditorOpeningError(new Error(`${response.status}: ${body}`));\n        }\n      }\n    } catch (err: any) {\n      setEditorOpeningError(err);\n    }\n  }\n\n  const { locale = \"en-US\", \"*\": slug } = useParams();\n\n  if (!folder) {\n    return null;\n  }\n\n  // If window.location.host is 'localhost:3000` then\n  // window.location.hostname is 'localhost'\n  const isReadOnly = !CRUD_MODE_HOSTNAMES.includes(window.location.hostname);\n\n  return (\n    <ul className=\"edit-actions\">\n      {!isReadOnly && (\n        <li>\n          <button\n            type=\"button\"\n            className=\"button\"\n            title={`Folder: ${folder}`}\n            onClick={openInEditorHandler}\n          >\n            Open in your <b>editor</b>\n          </button>\n        </li>\n      )}\n\n      <li>\n        <a\n          href={`https://developer.mozilla.org/${locale}/docs/${slug}`}\n          className=\"button\"\n        >\n          View on MDN\n        </a>\n      </li>\n\n      {!isReadOnly && (\n        <li>\n          <a\n            href={github_url.replace(\"/blob/\", \"/edit/\")}\n            className=\"button\"\n            rel=\"noopener noreferrer\"\n          >\n            Edit on <b>GitHub</b>\n          </a>\n        </li>\n      )}\n\n      {editorOpeningError ? (\n        <p className=\"error-message editor-opening-error\">\n          <b>Error opening page in your editor!</b>\n          <br />\n          <code>{editorOpeningError.toString()}</code>\n        </p>\n      ) : (\n        opening && <small>Trying to your editor now...</small>\n      )}\n    </ul>\n  );\n}\n","import React, { useEffect, useRef, useState } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { annotate, annotationGroup } from \"rough-notation\";\nimport { RoughAnnotation } from \"rough-notation/lib/model\";\nimport { diffWords } from \"diff\";\n\nimport { CRUD_MODE, CRUD_MODE_HOSTNAMES } from \"../../env\";\nimport { humanizeFlawName } from \"../../flaw-utils\";\nimport { useDocumentURL } from \"../hooks\";\nimport {\n  Doc,\n  BrokenLink,\n  MacroErrorMessage,\n  BadBCDLinkFlaw,\n  ImageReferenceFlaw,\n  ImageWidthFlaw,\n  GenericFlaw,\n  BadBCDQueryFlaw,\n  BadPreTagFlaw,\n  SectioningFlaw,\n  HeadingLinksFlaw,\n  TranslationDifferenceFlaw,\n  UnsafeHTMLFlaw,\n} from \"../types\";\nimport \"./flaws.scss\";\n\ninterface FlawCount {\n  name: string;\n  count: number;\n}\n\nfunction useAnnotations(genericFlaws: GenericFlaw[]) {\n  useEffect(() => {\n    const annotations: RoughAnnotation[] = [];\n    const elements: HTMLElement[] = [];\n    for (const flaw of genericFlaws) {\n      const element = document.querySelector(\n        `[data-flaw=\"${flaw.id}\"]`\n      ) as HTMLElement;\n      if (!element) {\n        console.warn(`Flaw ID '${flaw.id}' does not exist in the DOM`);\n        continue;\n      }\n      elements.push(element);\n      const annotationColor = flaw.suggestion ? \"orange\" : \"red\";\n      element.dataset.originalTitle = element.title;\n\n      element.title = flaw.suggestion\n        ? `Flaw suggestion: ${flaw.suggestion}`\n        : `Flaw explanation: ${flaw.explanation}`;\n      annotations.push(\n        annotate(element, {\n          type: \"box\",\n          color: annotationColor,\n          animationDuration: 300,\n        })\n      );\n    }\n    const ag = annotationGroup(annotations);\n    ag.show();\n\n    return () => {\n      ag.hide();\n\n      // Now, restore any 'title' attributes that were overridden.\n      for (const element of elements) {\n        if (element.dataset.originalTitle !== undefined) {\n          element.title = element.dataset.originalTitle;\n        }\n      }\n    };\n  }, [genericFlaws]);\n\n  function focus(flawID: string) {\n    const element = document.querySelector(\n      `[data-flaw=\"${flawID}\"]`\n    ) as HTMLElement;\n    if (!element) return;\n    const annotations: RoughAnnotation[] = [];\n    element.scrollIntoView({\n      behavior: \"smooth\",\n      block: \"center\",\n    });\n\n    if (element.parentElement) {\n      annotations.push(\n        annotate(element, {\n          type: \"circle\",\n          color: \"purple\",\n          animationDuration: 500,\n          strokeWidth: 2,\n          padding: 6,\n        })\n      );\n    }\n\n    if (annotations.length) {\n      const ag = annotationGroup(annotations);\n      ag.show();\n      // Only show this extra highlight temporarily\n      window.setTimeout(() => {\n        ag.hide();\n      }, 2000);\n    }\n  }\n\n  return {\n    focus,\n  };\n}\n\nconst FLAWS_HASH = \"#_flaws\";\n\nexport function ToggleDocumentFlaws({\n  doc,\n  reloadPage,\n}: {\n  doc: Doc;\n  reloadPage: () => void;\n}) {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const rootElement = useRef<HTMLDivElement>(null);\n  const isInitialRender = useRef(true);\n\n  const show = location.hash === FLAWS_HASH;\n\n  useEffect(() => {\n    if (isInitialRender.current && show && rootElement.current) {\n      rootElement.current.scrollIntoView({ behavior: \"smooth\" });\n    }\n    isInitialRender.current = false;\n  }, [show]);\n\n  function toggle() {\n    if (show) {\n      navigate(location.pathname + location.search);\n    } else {\n      navigate(location.pathname + location.search + FLAWS_HASH);\n    }\n  }\n\n  const flawsCounts = Object.entries(doc.flaws)\n    .map(([name, actualFlaws]) => ({\n      name,\n      count: actualFlaws.length,\n    }))\n    .sort((a, b) => b.count - a.count);\n\n  React.useEffect(() => {\n    const el = document.querySelector('link[rel=\"icon\"]') as HTMLLinkElement;\n    if (el) {\n      let allFixableFlaws = 0;\n      let allFlaws = 0;\n      Object.values(doc.flaws).forEach((flaws) => {\n        allFlaws += flaws.length;\n        allFixableFlaws += flaws.filter((flaw) => flaw.fixable).length;\n      });\n      el.href = !allFlaws\n        ? \"/favicon-48x48-flawless.png\"\n        : allFlaws === allFixableFlaws\n        ? \"/favicon-48x48-flaws-fixable.png\"\n        : \"/favicon-48x48-flaws.png\";\n    }\n  }, [doc.flaws]);\n\n  return (\n    <div\n      id={FLAWS_HASH.slice(1)}\n      ref={rootElement}\n      className=\"toggle-show-flaws\"\n    >\n      {flawsCounts.length > 0 ? (\n        <button type=\"button\" className=\"button\" onClick={toggle}>\n          {show ? \"Hide flaws\" : \"Show flaws\"} (\n          {flawsCounts.reduce((acc, flaw) => flaw.count + acc, 0)})\n        </button>\n      ) : (\n        <p>\n          No known flaws at the moment\n          <span role=\"img\" aria-label=\"yay!\">\n            🍾\n          </span>\n        </p>\n      )}{\" \"}\n      {show ? (\n        <Flaws doc={doc} flaws={flawsCounts} reloadPage={reloadPage} />\n      ) : (\n        <span>\n          {/* a one-liner about all the flaws */}\n          {flawsCounts\n            .map((flaw) => `${humanizeFlawName(flaw.name)}: ${flaw.count}`)\n            .join(\" + \")}\n        </span>\n      )}\n    </div>\n  );\n}\n\nfunction Flaws({\n  doc,\n  flaws,\n  reloadPage,\n}: {\n  doc: Doc;\n  flaws: FlawCount[];\n  reloadPage: () => void;\n}) {\n  if (!CRUD_MODE) {\n    throw new Error(\"This shouldn't be used in non-development builds\");\n  }\n\n  const fixableFlaws = Object.values(doc.flaws)\n    .map((flaws) => {\n      return flaws.filter(\n        (flaw) => !flaw.fixed && (flaw.fixable || flaw.externalImage)\n      );\n    })\n    .flat();\n\n  const isReadOnly = !CRUD_MODE_HOSTNAMES.includes(window.location.hostname);\n\n  // Note! This will work on Windows. The filename can be sent to\n  // the server in POSIX style and the `open-editor` program will make\n  // this work for Windows automatically.\n  const filePath = doc.source.folder + \"/\" + doc.source.filename;\n\n  return (\n    <div id=\"document-flaws\">\n      {!!fixableFlaws.length && !isReadOnly && fixableFlaws.length > 0 && (\n        <>\n          {doc.isMarkdown && (\n            <small>\n              Automatic fixing fixable flaws is experimental for Markdown\n              documents. See{\" \"}\n              <a href=\"https://github.com/mdn/yari/issues/4333\">\n                mdn/yari#4333\n              </a>\n            </small>\n          )}\n          <FixableFlawsAction\n            count={fixableFlaws.length}\n            reloadPage={reloadPage}\n          />\n        </>\n      )}{\" \"}\n      {flaws.map((flaw) => {\n        switch (flaw.name) {\n          case \"broken_links\":\n            return (\n              <BrokenLinks\n                key=\"broken_links\"\n                sourceFilePath={filePath}\n                links={doc.flaws.broken_links}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"bad_bcd_links\":\n            return (\n              <BadBCDLinks\n                key=\"bad_bcd_links\"\n                links={doc.flaws.bad_bcd_links}\n              />\n            );\n          case \"bad_bcd_queries\":\n            return (\n              <BadBCDQueries\n                key=\"bad_bcd_queries\"\n                flaws={doc.flaws.bad_bcd_queries}\n              />\n            );\n          case \"bad_pre_tags\":\n            return (\n              <BadPreTag\n                key=\"bad_pre_tags\"\n                sourceFilePath={filePath}\n                flaws={doc.flaws.bad_pre_tags}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"macros\":\n            return (\n              <Macros\n                key=\"macros\"\n                sourceFilePath={filePath}\n                flaws={doc.flaws.macros}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"images\":\n            return (\n              <Images\n                key=\"images\"\n                sourceFilePath={filePath}\n                images={doc.flaws.images}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"image_widths\":\n            return (\n              <ImageWidths\n                key=\"image_widths\"\n                sourceFilePath={filePath}\n                flaws={doc.flaws.image_widths}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"heading_links\":\n            return (\n              <HeadingLinks\n                key=\"heading_links\"\n                sourceFilePath={filePath}\n                flaws={doc.flaws.heading_links}\n                isReadOnly={isReadOnly}\n              />\n            );\n          case \"unsafe_html\":\n            return (\n              <UnsafeHTML key=\"unsafe_html\" flaws={doc.flaws.unsafe_html} />\n            );\n          case \"translation_differences\":\n            return (\n              <TranslationDifferences\n                key=\"translation_differences\"\n                flaws={doc.flaws.translation_differences}\n              />\n            );\n          case \"sectioning\":\n            return <Sectioning key=\"sectioning\" flaws={doc.flaws.sectioning} />;\n          default:\n            throw new Error(`Unknown flaw check '${flaw.name}'`);\n        }\n      })}\n    </div>\n  );\n}\n\nfunction FixableFlawsAction({\n  count,\n  reloadPage,\n}: {\n  count: number;\n  reloadPage: () => void;\n}) {\n  const [fixing, setFixing] = useState(false);\n  const [fixed, setFixed] = useState(false);\n  const [fixingError, setFixingError] = useState<Error | null>(null);\n\n  const documentURL = useDocumentURL();\n\n  async function fix() {\n    try {\n      const response = await fetch(\n        `/_document/fixfixableflaws?${new URLSearchParams({\n          url: documentURL,\n        }).toString()}`,\n        {\n          method: \"PUT\",\n        }\n      );\n      if (!response.ok) {\n        throw new Error(`${response.status} on ${response.url}`);\n      }\n      setFixed(true);\n    } catch (error: any) {\n      console.error(\"Error trying to fix fixable flaws\");\n\n      setFixingError(error);\n    } finally {\n      setFixing(false);\n    }\n  }\n\n  return (\n    <div>\n      {fixingError && (\n        <p style={{ color: \"red\" }}>\n          <b>Error:</b> <code>{fixingError.toString()}</code>\n        </p>\n      )}\n      <button\n        type=\"button\"\n        className=\"button\"\n        disabled={fixing}\n        onClick={async () => {\n          setFixing((prev) => !prev);\n          await fix();\n          // Add a tiny delay so you get a chance to see the \"Fixed!\" message.\n          setTimeout(() => {\n            reloadPage();\n          }, 1000);\n        }}\n      >\n        {fixing ? \"Fixing...\" : `Fix fixable flaws (${count})`}\n      </button>{\" \"}\n      {fixed && <b style={{ color: \"darkgreen\" }}>Fixed!</b>}\n    </div>\n  );\n}\n\nfunction FixableFlawBadge() {\n  return (\n    <span title=\"This flaw is fixable.\">\n      Fixable{\" \"}\n      <span role=\"img\" aria-label=\"Thumbs up\">\n        👍🏼\n      </span>\n    </span>\n  );\n}\n\nfunction ShowDiff({ before, after }: { before: string; after: string }) {\n  const diff = diffWords(before, after);\n  const bits = diff.map((part, i: number) => {\n    if (part.added) {\n      return <ins key={i}>{part.value}</ins>;\n    } else if (part.removed) {\n      return <del key={i}>{part.value}</del>;\n    } else {\n      return <span key={i}>{part.value}</span>;\n    }\n  });\n  return <code>{bits}</code>;\n}\n\nfunction BrokenLinks({\n  sourceFilePath,\n  links,\n  isReadOnly,\n}: {\n  sourceFilePath: string;\n  links: BrokenLink[];\n  isReadOnly: boolean;\n}) {\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  const { focus } = useAnnotations(links);\n\n  return (\n    <div className=\"flaw flaw__broken_links\">\n      <h3>Broken Links</h3>\n      <ol>\n        {links.map((flaw, i) => {\n          const key = `${flaw.href}${flaw.line}${flaw.column}`;\n          return (\n            <li\n              key={key}\n              className={flaw.fixed ? \"fixed_flaw\" : undefined}\n              title={\n                flaw.fixed\n                  ? \"This broken link has been automatically fixed.\"\n                  : undefined\n              }\n            >\n              <code>{flaw.href}</code>{\" \"}\n              <span\n                role=\"img\"\n                aria-label=\"Click to highlight broken link\"\n                title=\"Click to highlight broken link anchor\"\n                style={{ cursor: \"zoom-in\" }}\n                onClick={() => {\n                  focus(flaw.id);\n                }}\n              >\n                👀\n              </span>{\" \"}\n              {isReadOnly ? (\n                <>\n                  {/* It would be cool if we can change this to a link to the line in the\n                  file in GitHub's UI. */}\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${sourceFilePath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    openInEditor(key, flaw.line, flaw.column);\n                  }}\n                  title=\"Click to open in your editor\"\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )}{\" \"}\n              {flaw.fixable && <FixableFlawBadge />}{\" \"}\n              {opening && opening === key && <span>Opening...</span>}\n              <br />\n              {flaw.suggestion ? (\n                <span>\n                  <b>Suggestion:</b>\n                  <ShowDiff before={flaw.href} after={flaw.suggestion} />\n                </span>\n              ) : (\n                <code>{flaw.explanation}</code>\n              )}\n            </li>\n          );\n        })}\n      </ol>\n    </div>\n  );\n}\n\nfunction BadBCDQueries({ flaws }: { flaws: BadBCDQueryFlaw[] }) {\n  return (\n    <div className=\"flaw flaw__bad_bcd_queries\">\n      <h3>{humanizeFlawName(\"bad_bcd_queries\")}</h3>\n      <ul>\n        {flaws.map((flaw) => (\n          <li key={flaw.id}>\n            <code>{flaw.explanation}</code>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction BadBCDLinks({ links }: { links: BadBCDLinkFlaw[] }) {\n  return (\n    <div className=\"flaw flaw__bad_bcd_links\">\n      <h3>{humanizeFlawName(\"bad_bcd_links\")}</h3>\n      <ul>\n        {links.map((link) => (\n          <li key={link.slug}>\n            In <code>{link.query}</code> under key <code>{link.key}</code> can't\n            find document: <code>{link.slug}</code>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction Sectioning({ flaws }: { flaws: SectioningFlaw[] }) {\n  return (\n    <div className=\"flaw flaw__sectioning\">\n      <h3>{humanizeFlawName(\"sectioning\")}</h3>\n      <ul>\n        {flaws.map((flaw) => (\n          <li key={flaw.id}>\n            <code>{flaw.explanation}</code>\n            <br />\n            <small>\n              Usually this means there's something in the raw content that makes\n              it hard to split up the rendered HTML. Perhaps delete unnecessary\n              empty divs.\n            </small>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction BadPreTag({\n  flaws,\n  sourceFilePath,\n  isReadOnly,\n}: {\n  flaws: BadPreTagFlaw[];\n  sourceFilePath: string;\n  isReadOnly: boolean;\n}) {\n  const { focus } = useAnnotations(flaws);\n\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  return (\n    <div className=\"flaw flaw__bad_pre_tags\">\n      <h3>{humanizeFlawName(\"bad_pre_tags\")}</h3>\n      <ul>\n        {flaws.map((flaw) => (\n          <li key={flaw.id}>\n            {flaw.explanation}{\" \"}\n            <span\n              role=\"img\"\n              aria-label=\"Click to highlight broken link\"\n              title=\"Click to highlight broken link anchor\"\n              style={{ cursor: \"zoom-in\" }}\n              onClick={() => {\n                focus(flaw.id);\n              }}\n            >\n              👀\n            </span>{\" \"}\n            {flaw.line && flaw.column ? (\n              isReadOnly ? (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${sourceFilePath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    if (flaw.line && flaw.column)\n                      openInEditor(flaw.id, flaw.line, flaw.column);\n                  }}\n                  title=\"Click to open in your editor\"\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )\n            ) : null}{\" \"}\n            {flaw.fixable && <FixableFlawBadge />}{\" \"}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nfunction Macros({\n  flaws,\n  sourceFilePath,\n  isReadOnly,\n}: {\n  flaws: MacroErrorMessage[];\n  sourceFilePath: string;\n  isReadOnly: boolean;\n}) {\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(msg: MacroErrorMessage, id: string) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", msg.filepath);\n    sp.set(\"line\", `${msg.line}`);\n    sp.set(\"column\", `${msg.column}`);\n    console.log(\n      `Going to try to open ${msg.filepath}:${msg.line}:${msg.column} in your editor`\n    );\n    setOpening(id);\n    fetch(`/_open?${sp.toString()}`);\n  }\n\n  return (\n    <div className=\"flaw flaw__macros\">\n      <h3>{humanizeFlawName(\"macros\")}</h3>\n      {flaws.map((flaw) => {\n        const inPrerequisiteMacro = !flaw.filepath.includes(sourceFilePath);\n        return (\n          <details\n            key={flaw.id}\n            className={flaw.fixed ? \"fixed_flaw\" : undefined}\n            title={\n              flaw.fixed\n                ? \"This macro flaw has been automatically fixed.\"\n                : undefined\n            }\n          >\n            <summary>\n              <code>{flaw.name}</code> from <code>{flaw.macroName}</code>{\" \"}\n              {isReadOnly ? (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${flaw.filepath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    openInEditor(flaw, flaw.id);\n                  }}\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )}{\" \"}\n              {opening && opening === flaw.id && <span>Opening...</span>}{\" \"}\n              {inPrerequisiteMacro && (\n                <span\n                  className=\"macro-filepath-in-prerequisite\"\n                  title={`This page depends on a macro expansion inside ${flaw.filepath}`}\n                >\n                  In prerequisite macro\n                </span>\n              )}{\" \"}\n              {flaw.fixable && <FixableFlawBadge />}{\" \"}\n            </summary>\n            {flaw.fixable && flaw.suggestion && (\n              <>\n                <b>Suggestion:</b>\n                <ShowDiff before={flaw.macroSource} after={flaw.suggestion} />\n                <br />\n              </>\n            )}\n            {flaw.explanation && (\n              <>\n                <b>Explanation:</b> <code>{flaw.explanation}</code>\n                <br />\n              </>\n            )}\n            <b>Context:</b>\n            <pre>{flaw.sourceContext}</pre>\n            <b>Original error stack:</b>\n            <pre>{flaw.errorStack}</pre>\n            <b>Filepath:</b>{\" \"}\n            {inPrerequisiteMacro && (\n              <i className=\"macro-filepath-in-prerequisite\">\n                Note that this is different from the page you're currently\n                viewing.\n              </i>\n            )}\n            <br />\n            <code>{flaw.filepath}</code>\n          </details>\n        );\n      })}\n    </div>\n  );\n}\n\nfunction Images({\n  sourceFilePath,\n  images,\n  isReadOnly,\n}: {\n  sourceFilePath: string;\n  images: ImageReferenceFlaw[];\n  isReadOnly: boolean;\n}) {\n  // XXX rewrite to a hook\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  const { focus } = useAnnotations(images);\n\n  return (\n    <div className=\"flaw flaw__images\">\n      <h3>{humanizeFlawName(\"images\")}</h3>\n      <ul>\n        {images.map((flaw, i) => {\n          const key = `${flaw.src}${flaw.line}${flaw.column}`;\n          return (\n            <li key={key}>\n              <code>{flaw.src}</code>{\" \"}\n              <span\n                role=\"img\"\n                aria-label=\"Click to highlight image\"\n                title=\"Click to highlight image\"\n                style={{ cursor: \"zoom-in\" }}\n                onClick={() => {\n                  focus(flaw.id);\n                }}\n              >\n                👀\n              </span>{\" \"}\n              {isReadOnly ? (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${sourceFilePath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    openInEditor(key, flaw.line, flaw.column);\n                  }}\n                  title=\"Click to open in your editor\"\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )}{\" \"}\n              {(flaw.fixable || flaw.externalImage) && <FixableFlawBadge />}{\" \"}\n              <br />\n              {flaw.suggestion && (\n                <span>\n                  <b>Suggestion:</b>\n                  <ShowDiff before={flaw.src} after={flaw.suggestion} />\n                </span>\n              )}{\" \"}\n              <span>{flaw.explanation}</span>\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction ImageWidths({\n  sourceFilePath,\n  flaws,\n  isReadOnly,\n}: {\n  sourceFilePath: string;\n  flaws: ImageWidthFlaw[];\n  isReadOnly: boolean;\n}) {\n  // XXX rewrite to a hook\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  const { focus } = useAnnotations(flaws);\n\n  return (\n    <div className=\"flaw flaw__image_widths\">\n      <h3>{humanizeFlawName(\"image_widths\")}</h3>\n      <ul>\n        {flaws.map((flaw, i) => {\n          const key = `${flaw.style}${flaw.line}${flaw.column}`;\n          return (\n            <li key={key}>\n              <b>{flaw.explanation}</b>{\" \"}\n              <span\n                role=\"img\"\n                aria-label=\"Click to highlight image\"\n                title=\"Click to highlight image\"\n                style={{ cursor: \"zoom-in\" }}\n                onClick={() => {\n                  focus(flaw.id);\n                }}\n              >\n                👀\n              </span>{\" \"}\n              {isReadOnly ? (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              ) : (\n                <a\n                  href={`file://${sourceFilePath}`}\n                  onClick={(event: React.MouseEvent) => {\n                    event.preventDefault();\n                    openInEditor(key, flaw.line, flaw.column);\n                  }}\n                  title=\"Click to open in your editor\"\n                >\n                  line {flaw.line}:{flaw.column}\n                </a>\n              )}{\" \"}\n              {(flaw.fixable || flaw.externalImage) && <FixableFlawBadge />}{\" \"}\n              <br />\n              {flaw.suggestion === \"\" && (\n                <>\n                  <b>Style:</b> <code>{flaw.style}</code>\n                  <br />\n                </>\n              )}\n              {flaw.suggestion !== null && (\n                <span>\n                  <b>Suggestion:</b>{\" \"}\n                  {flaw.suggestion ? (\n                    <ShowDiff before={flaw.style} after={flaw.suggestion} />\n                  ) : (\n                    <i>\n                      delete the <code>style</code> attribute\n                    </i>\n                  )}\n                </span>\n              )}{\" \"}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction HeadingLinks({\n  sourceFilePath,\n  flaws,\n  isReadOnly,\n}: {\n  sourceFilePath: string;\n  flaws: HeadingLinksFlaw[];\n  isReadOnly: boolean;\n}) {\n  // XXX rewrite to a hook\n  const [opening, setOpening] = React.useState<string | null>(null);\n  useEffect(() => {\n    let unsetOpeningTimer: ReturnType<typeof setTimeout>;\n    if (opening) {\n      unsetOpeningTimer = setTimeout(() => {\n        setOpening(null);\n      }, 3000);\n    }\n    return () => {\n      if (unsetOpeningTimer) {\n        clearTimeout(unsetOpeningTimer);\n      }\n    };\n  }, [opening]);\n\n  function openInEditor(key: string, line: number, column: number) {\n    const sp = new URLSearchParams();\n    sp.set(\"filepath\", sourceFilePath);\n    sp.set(\"line\", `${line}`);\n    sp.set(\"column\", `${column}`);\n    console.log(\n      `Going to try to open ${sourceFilePath}:${line}:${column} in your editor`\n    );\n    setOpening(key);\n    fetch(`/_open?${sp.toString()}`).catch((err) => {\n      console.warn(`Error trying to _open?${sp.toString()}:`, err);\n    });\n  }\n\n  return (\n    <div className=\"flaw flaw__heading_links\">\n      <h3>{humanizeFlawName(\"heading_links\")}</h3>\n      <ul>\n        {flaws.map((flaw, i) => {\n          const key = flaw.id;\n          return (\n            <li key={key}>\n              <b>{flaw.explanation}</b>{\" \"}\n              {flaw.line && flaw.column ? (\n                isReadOnly ? (\n                  <>\n                    line {flaw.line}:{flaw.column}\n                  </>\n                ) : (\n                  <a\n                    href={`file://${sourceFilePath}`}\n                    onClick={(event: React.MouseEvent) => {\n                      event.preventDefault();\n                      openInEditor(\n                        key,\n                        flaw.line as number,\n                        flaw.column as number\n                      );\n                    }}\n                    title=\"Click to open in your editor\"\n                  >\n                    line {flaw.line}:{flaw.column}\n                  </a>\n                )\n              ) : null}{\" \"}\n              {flaw.fixable && <FixableFlawBadge />} <br />\n              <b>HTML:</b> <code>{flaw.html}</code> <br />\n              {flaw.suggestion && flaw.before ? (\n                <span>\n                  <b>Suggestion:</b>{\" \"}\n                  <ShowDiff before={flaw.before} after={flaw.suggestion} />\n                </span>\n              ) : (\n                <i>\n                  All <code>&lt;a&gt;</code> tags need to be removed\n                </i>\n              )}{\" \"}\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction UnsafeHTML({ flaws }: { flaws: UnsafeHTMLFlaw[] }) {\n  // The UI for this flaw can be a bit \"simplistic\" because by default this\n  // flaw will error rather than warn.\n  return (\n    <div className=\"flaw\">\n      <h3>⚠️ {humanizeFlawName(\"unsafe_html\")} ⚠️</h3>\n      <ul>\n        {flaws.map((flaw, i) => {\n          const key = flaw.id;\n          return (\n            <li key={key}>\n              <b>{flaw.explanation}</b>{\" \"}\n              {flaw.line && flaw.column && (\n                <>\n                  line {flaw.line}:{flaw.column}\n                </>\n              )}{\" \"}\n              {flaw.fixable && <FixableFlawBadge />} <br />\n              <b>HTML:</b>\n              <pre className=\"example-bad\">{flaw.html}</pre>\n              <br />\n            </li>\n          );\n        })}\n      </ul>\n    </div>\n  );\n}\n\nfunction TranslationDifferences({\n  flaws,\n}: {\n  flaws: TranslationDifferenceFlaw[];\n}) {\n  return (\n    <div className=\"flaw\">\n      <h3>{humanizeFlawName(\"translation_differences\")}</h3>\n      <ul>\n        {flaws.map((flaw, i) => (\n          <li key={flaw.id}>\n            {<b>{flaw.explanation}</b>}\n            {flaw.difference.explanationNotes &&\n              flaw.difference.explanationNotes.length > 0 && (\n                <ul className=\"explanation-notes\">\n                  {flaw.difference.explanationNotes.map(\n                    (explanationNotes, i) => {\n                      return (\n                        <li key={`${explanationNotes}${i}`}>\n                          <code>{explanationNotes}</code>\n                        </li>\n                      );\n                    }\n                  )}\n                </ul>\n              )}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import React, { useEffect } from \"react\";\nimport { CRUD_MODE_HOSTNAMES } from \"../../env\";\nimport { Doc } from \"../types\";\nimport { EditActions } from \"./edit-actions\";\nimport { ToggleDocumentFlaws } from \"./flaws\";\n\nimport \"./index.scss\";\n\nexport default function Toolbar({\n  doc,\n  reloadPage,\n}: {\n  doc: Doc;\n  reloadPage: () => void;\n}) {\n  // Every time the toolbar is used to view a document, log that in localStorage\n  // as a list of recent document views. This can be used on the homepage to\n  // help you navigate back to pages you frequently visit.\n  useEffect(() => {\n    const localStorageKey = \"viewed-documents\";\n    const entry = {\n      url: doc.mdn_url,\n      title: doc.title,\n      timestamp: new Date().getTime(),\n    };\n    const previousVisits = JSON.parse(\n      localStorage.getItem(localStorageKey) || \"[]\"\n    );\n    const visits = [\n      entry,\n      ...previousVisits.filter((v) => v.url !== entry.url),\n    ];\n    localStorage.setItem(localStorageKey, JSON.stringify(visits.slice(0, 20)));\n  }, [doc]);\n\n  const isReadOnly = !CRUD_MODE_HOSTNAMES.includes(window.location.hostname);\n\n  return (\n    <div className=\"toolbar\">\n      <div className=\"toolbar-first-row\">\n        <EditActions source={doc.source} />\n      </div>\n      {isReadOnly && (\n        <p>\n          <i>\n            You're in <b>read-only</b> mode.\n          </i>\n        </p>\n      )}\n      <ToggleDocumentFlaws doc={doc} reloadPage={reloadPage} />\n    </div>\n  );\n}\n","/**\n * This file serves to help flaws when displayed one at a time and when\n * displayed in batches.\n *\n */\n\nexport function humanizeFlawName(name) {\n  const verboseNames = {\n    // List all the names that can't be nicely computed by the fallback()\n    // function.\n    bad_bcd_queries: \"Bad BCD queries\",\n    bad_bcd_links: \"Bad BCD links\",\n    bad_pre_tags: \"Bad <pre> tags\",\n    unsafe_html: \"Unsafe HTML\",\n  };\n  function fallback() {\n    return name.charAt(0).toUpperCase() + name.slice(1).replace(/_/g, \" \");\n  }\n  return verboseNames[name] || fallback();\n}\n"],"names":["EditActions","source","folder","filename","github_url","useState","opening","setOpening","editorOpeningError","setEditorOpeningError","event","preventDefault","filepath","console","log","fetch","response","ok","status","Error","statusText","text","body","useEffect","unsetOpeningTimer","setTimeout","clearTimeout","useParams","locale","slug","isReadOnly","CRUD_MODE_HOSTNAMES","window","location","hostname","className","type","title","onClick","href","replace","rel","toString","useAnnotations","genericFlaws","annotations","elements","flaw","element","document","querySelector","id","push","annotationColor","suggestion","dataset","originalTitle","explanation","annotate","color","animationDuration","warn","ag","annotationGroup","show","hide","undefined","focus","flawID","scrollIntoView","behavior","block","parentElement","strokeWidth","padding","length","FLAWS_HASH","ToggleDocumentFlaws","doc","reloadPage","useLocation","navigate","useNavigate","rootElement","useRef","isInitialRender","hash","current","flawsCounts","Object","entries","flaws","map","name","count","sort","a","b","React","el","allFixableFlaws","allFlaws","values","forEach","filter","fixable","slice","ref","pathname","search","reduce","acc","role","Flaws","humanizeFlawName","join","CRUD_MODE","fixableFlaws","fixed","externalImage","flat","filePath","isMarkdown","FixableFlawsAction","BrokenLinks","sourceFilePath","links","broken_links","BadBCDLinks","bad_bcd_links","BadBCDQueries","bad_bcd_queries","BadPreTag","bad_pre_tags","Macros","macros","Images","images","ImageWidths","image_widths","HeadingLinks","heading_links","UnsafeHTML","unsafe_html","TranslationDifferences","translation_differences","Sectioning","sectioning","fixing","setFixing","setFixed","fixingError","setFixingError","documentURL","useDocumentURL","fix","URLSearchParams","url","method","error","style","disabled","prev","FixableFlawBadge","ShowDiff","before","after","bits","diffWords","part","i","added","value","removed","key","line","column","cursor","sp","set","catch","err","openInEditor","link","query","inPrerequisiteMacro","includes","macroName","msg","macroSource","sourceContext","errorStack","src","html","difference","explanationNotes","Toolbar","localStorageKey","entry","mdn_url","timestamp","Date","getTime","previousVisits","JSON","parse","localStorage","getItem","visits","v","setItem","stringify","charAt","toUpperCase"],"sourceRoot":""}