{"version":3,"file":"static/js/69.dcf00581.chunk.js","mappings":"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","sources":["page-not-found/fallback-link.tsx","../../libs/languages/index.js"],"sourcesContent":["import React from \"react\";\nimport { useLocation, useParams } from \"react-router-dom\";\nimport useSWR from \"swr\";\n\nimport { Doc } from \"../document/types\";\nimport LANGUAGES_RAW from \"../../../libs/languages\";\nimport NoteCard from \"../ui/molecules/notecards\";\n\nconst LANGUAGES = new Map(\n  Object.entries(LANGUAGES_RAW).map(([locale, data]) => {\n    return [locale.toLowerCase(), data];\n  })\n);\n\n// TODO IDEA\n// Use https://www.npmjs.com/package/string-similarity\n// to download the /$locale/search-index.json to get a list of all possible\n// URLs and see if we can compare the current URL with one of those\n// for making a great suggestion,\n// like \"Did you mean: <a href=$url>$doctitle</a>?\"\n\nexport default function FallbackLink({ url }: { url: string }) {\n  const { locale = \"en-US\" } = useParams();\n  const location = useLocation();\n\n  const [fallbackCheckURL, setFallbackCheckURL] = React.useState<null | string>(\n    null\n  );\n\n  const { error, data: document } = useSWR<null | Doc>(\n    fallbackCheckURL,\n    async (url) => {\n      const response = await fetch(url);\n      if (response.ok) {\n        // If the URL is already for the JSON file, use  the response\n        if (response.url.endsWith(\"/index.json\")) {\n          const { doc } = await response.json();\n          return doc;\n        }\n        // Otherwise, use the URL that gave the successful page (potentially\n        // including any redirects) and append index.json to get the data needed\n        let jsonURL = response.url;\n        if (!jsonURL.endsWith(\"/\")) {\n          jsonURL += \"/\";\n        }\n        jsonURL += \"index.json\";\n        const jsonResponse = await fetch(jsonURL);\n        if (jsonResponse.ok) {\n          const { doc } = await jsonResponse.json();\n          return doc;\n        } else if (jsonResponse.status === 404) {\n          return null;\n        }\n      } else if (response.status === 404) {\n        return null;\n      }\n      throw new Error(`${response.status} on ${url}`);\n    },\n    { revalidateOnFocus: false }\n  );\n\n  React.useEffect(() => {\n    if (url && url.includes(\"/docs/\") && locale.toLowerCase() !== \"en-us\") {\n      // What if we attempt to see if it would be something there in English?\n      // We'll use the `index.json` version of the URL\n      let enUSURL = url.replace(`/${locale}/`, \"/en-US/\");\n      // But of the benefit of local development, devs can use `/_404/`\n      // instead of `/docs/` to simulate getting to the Page not found page.\n      // So remove that when constructing the English index.json URL.\n      enUSURL = enUSURL.replace(\"/_404/\", \"/docs/\");\n\n      // The fallback check URL should not force append index.json so it can\n      // follow any redirects\n      setFallbackCheckURL(enUSURL);\n    }\n  }, [url, locale, location]);\n\n  if (error) {\n    return (\n      <NoteCard type=\"negative\" extraClasses=\"fallback-document\">\n        <h4>Oh no!</h4>\n        <p>\n          Unfortunately, when trying to look to see if there was an English\n          fallback, that check failed. This is either because of a temporary\n          network error or because of a bug.\n        </p>\n        <p>\n          The error was: <code>{error.toString()}</code>\n        </p>\n      </NoteCard>\n    );\n  } else if (document) {\n    return (\n      <NoteCard type=\"success\" extraClasses=\"fallback-document\">\n        <h4>Good news!</h4>\n        <p>\n          The page you requested doesn't exist in{\" \"}\n          <b>{LANGUAGES.get(locale.toLowerCase())?.English}</b> but it exists in{\" \"}\n          <b>English</b>\n        </p>\n        <p className=\"fallback-link\">\n          <a href={document.mdn_url}>\n            <b>{document.title}</b>\n            <br />\n            <small>{document.mdn_url}</small>\n          </a>\n        </p>\n      </NoteCard>\n    );\n  } else if (document === null) {\n    // It means the lookup \"worked\" in principle, but there wasn't an English\n    // document there. Bummer. But at least we tried.\n    // Should we say something??\n  }\n\n  return null;\n}\n","module.exports = {\n  ach: {\n    English: \"Acholi\",\n    native: \"Acholi\",\n  },\n  ak: {\n    English: \"Akan\",\n    native: \"Akan\",\n  },\n  \"am-et\": {\n    English: \"Amharic\",\n    native: \"\\u12a0\\u121b\\u122d\\u129b\",\n  },\n  an: {\n    English: \"Aragonese\",\n    native: \"aragon\\u00e9s\",\n  },\n  ar: {\n    English: \"Arabic\",\n    native: \"\\u0639\\u0631\\u0628\\u064a\",\n  },\n  as: {\n    English: \"Assamese\",\n    native: \"\\u0985\\u09b8\\u09ae\\u09c0\\u09af\\u09bc\\u09be\",\n  },\n  ast: {\n    English: \"Asturian\",\n    native: \"Asturianu\",\n  },\n  azz: {\n    English: \"Highland Puebla Nahuatl\",\n    native: \"nahuatl sierra norte Puebla\",\n  },\n  be: {\n    English: \"Belarusian\",\n    native: \"\\u0411\\u0435\\u043b\\u0430\\u0440\\u0443\\u0441\\u043a\\u0430\\u044f\",\n  },\n  bg: {\n    English: \"Bulgarian\",\n    native: \"\\u0411\\u044a\\u043b\\u0433\\u0430\\u0440\\u0441\\u043a\\u0438\",\n  },\n  bm: {\n    English: \"Bambara\",\n    native: \"Bamanankan\",\n  },\n  bn: {\n    English: \"Bengali\",\n    native: \"\\u09ac\\u09be\\u0982\\u09b2\\u09be\",\n  },\n  br: {\n    English: \"Breton\",\n    native: \"Brezhoneg\",\n  },\n  brx: {\n    English: \"Bodo\",\n    native: \"\\u092c\\u0930'\",\n  },\n  bs: {\n    English: \"Bosnian\",\n    native: \"Bosanski\",\n  },\n  ca: {\n    English: \"Catalan\",\n    native: \"Catal\\u00e0\",\n  },\n  \"ca-valencia\": {\n    English: \"Catalan (Valencian)\",\n    native: \"catal\\u00e0 (valenci\\u00e0)\",\n  },\n  cak: {\n    English: \"Kaqchikel\",\n    native: \"Maya Kaqchikel\",\n  },\n  csb: {\n    English: \"Kashubian\",\n    native: \"Kasz\\u00ebbsczi\",\n  },\n  cy: {\n    English: \"Welsh\",\n    native: \"Cymraeg\",\n  },\n  da: {\n    English: \"Danish\",\n    native: \"Dansk\",\n  },\n  dbg: {\n    English: \"Debug Robot\",\n    native: \"\\u1e12\\u1e17\\u0180\\u016d\\u0260 \\u0158\\u01ff\\u0180\\u01ff\\u0167\",\n  },\n  de: {\n    English: \"German\",\n    native: \"Deutsch\",\n  },\n  \"de-AT\": {\n    English: \"German (Austria)\",\n    native: \"Deutsch (\\u00d6sterreich)\",\n  },\n  \"de-CH\": {\n    English: \"German (Switzerland)\",\n    native: \"Deutsch (Schweiz)\",\n  },\n  \"de-DE\": {\n    English: \"German (Germany)\",\n    native: \"Deutsch (Deutschland)\",\n  },\n  dsb: {\n    English: \"Lower Sorbian\",\n    native: \"Dolnoserb\\u0161\\u0107ina\",\n  },\n  el: {\n    English: \"Greek\",\n    native: \"\\u0395\\u03bb\\u03bb\\u03b7\\u03bd\\u03b9\\u03ba\\u03ac\",\n  },\n  \"en-AU\": {\n    English: \"English (Australian)\",\n    native: \"English (Australian)\",\n  },\n  \"en-CA\": {\n    English: \"English (Canadian)\",\n    native: \"English (Canadian)\",\n  },\n  \"en-GB\": {\n    English: \"English (British)\",\n    native: \"English (British)\",\n  },\n  \"en-NZ\": {\n    English: \"English (New Zealand)\",\n    native: \"English (New Zealand)\",\n  },\n  \"en-US\": {\n    English: \"English (US)\",\n    native: \"English (US)\",\n  },\n  \"en-ZA\": {\n    English: \"English (South African)\",\n    native: \"English (South African)\",\n  },\n  eo: {\n    English: \"Esperanto\",\n    native: \"Esperanto\",\n  },\n  es: {\n    English: \"Spanish\",\n    native: \"Espa\\u00f1ol\",\n  },\n  \"es-AR\": {\n    English: \"Spanish (Argentina)\",\n    native: \"Espa\\u00f1ol (de Argentina)\",\n  },\n  \"es-CL\": {\n    English: \"Spanish (Chile)\",\n    native: \"Espa\\u00f1ol (de Chile)\",\n  },\n  \"es-ES\": {\n    English: \"Spanish (Spain)\",\n    native: \"Espa\\u00f1ol (de Espa\\u00f1a)\",\n  },\n  \"es-MX\": {\n    English: \"Spanish (Mexico)\",\n    native: \"Espa\\u00f1ol (de M\\u00e9xico)\",\n  },\n  et: {\n    English: \"Estonian\",\n    native: \"Eesti keel\",\n  },\n  eu: {\n    English: \"Basque\",\n    native: \"Euskara\",\n  },\n  fa: {\n    English: \"Persian\",\n    native: \"\\u0641\\u0627\\u0631\\u0633\\u06cc\",\n  },\n  fi: {\n    English: \"Finnish\",\n    native: \"suomi\",\n  },\n  \"fj-FJ\": {\n    English: \"Fijian\",\n    native: \"Vosa vaka-Viti\",\n  },\n  fr: {\n    English: \"French\",\n    native: \"Fran\\u00e7ais\",\n  },\n  \"fur-IT\": {\n    English: \"Friulian\",\n    native: \"Furlan\",\n  },\n  ga: {\n    English: \"Irish\",\n    native: \"Gaeilge\",\n  },\n  gd: {\n    English: \"Gaelic (Scotland)\",\n    native: \"G\\u00e0idhlig\",\n  },\n  gl: {\n    English: \"Galician\",\n    native: \"Galego\",\n  },\n  gn: {\n    English: \"Guarani\",\n    native: \"Ava\\u00f1e'\\u1ebd\",\n  },\n  gu: {\n    English: \"Gujarati\",\n    native: \"\\u0a97\\u0ac1\\u0a9c\\u0ab0\\u0abe\\u0aa4\\u0ac0\",\n  },\n  \"gu-IN\": {\n    English: \"Gujarati (India)\",\n    native:\n      \"\\u0a97\\u0ac1\\u0a9c\\u0ab0\\u0abe\\u0aa4\\u0ac0 (\\u0aad\\u0abe\\u0ab0\\u0aa4)\",\n  },\n  he: {\n    English: \"Hebrew\",\n    native: \"\\u05e2\\u05d1\\u05e8\\u05d9\\u05ea\",\n  },\n  hi: {\n    English: \"Hindi\",\n    native: \"\\u0939\\u093f\\u0928\\u094d\\u0926\\u0940\",\n  },\n  \"hi-IN\": {\n    English: \"Hindi (India)\",\n    native: \"\\u0939\\u093f\\u0928\\u094d\\u0926\\u0940 (\\u092d\\u093e\\u0930\\u0924)\",\n  },\n  hsb: {\n    English: \"Upper Sorbian\",\n    native: \"Hornjoserbsce\",\n  },\n  hu: {\n    English: \"Hungarian\",\n    native: \"magyar\",\n  },\n  \"hy-AM\": {\n    English: \"Armenian\",\n    native: \"\\u0540\\u0561\\u0575\\u0565\\u0580\\u0565\\u0576\",\n  },\n  ia: {\n    English: \"Interlingua\",\n    native: \"Interlingua\",\n  },\n  id: {\n    English: \"Indonesian\",\n    native: \"Bahasa Indonesia\",\n  },\n  is: {\n    English: \"Icelandic\",\n    native: \"\\u00edslenska\",\n  },\n  it: {\n    English: \"Italian\",\n    native: \"Italiano\",\n  },\n  ja: {\n    English: \"Japanese\",\n    native: \"\\u65e5\\u672c\\u8a9e\",\n  },\n  \"ja-JP-mac\": {\n    English: \"Japanese\",\n    native: \"\\u65e5\\u672c\\u8a9e\",\n  },\n  kab: {\n    English: \"Kabyle\",\n    native: \"Taqbaylit\",\n  },\n  kk: {\n    English: \"Kazakh\",\n    native: \"\\u049a\\u0430\\u0437\\u0430\\u049b\",\n  },\n  km: {\n    English: \"Khmer\",\n    native: \"\\u1781\\u17d2\\u1798\\u17c2\\u179a\",\n  },\n  kn: {\n    English: \"Kannada\",\n    native: \"\\u0c95\\u0ca8\\u0ccd\\u0ca8\\u0ca1\",\n  },\n  ko: {\n    English: \"Korean\",\n    native: \"\\ud55c\\uad6d\\uc5b4\",\n  },\n  kok: {\n    English: \"Konkani\",\n    native: \"\\u0915\\u094b\\u0902\\u0915\\u0928\\u0940\",\n  },\n  ku: {\n    English: \"Kurdish\",\n    native: \"Kurd\\u00ee\",\n  },\n  ks: {\n    English: \"Kashmiri\",\n    native: \"\\u0643\\u0634\\u0645\\u06cc\\u0631\\u06cc\",\n  },\n  la: {\n    English: \"Latin\",\n    native: \"Latina\",\n  },\n  lg: {\n    English: \"Luganda\",\n    native: \"Luganda\",\n  },\n  lij: {\n    English: \"Ligurian\",\n    native: \"Ligure\",\n  },\n  lo: {\n    English: \"Lao\",\n    native: \"\\u0e9e\\u0eb2\\u0eaa\\u0eb2\\u0ea5\\u0eb2\\u0ea7\",\n  },\n  lt: {\n    English: \"Lithuanian\",\n    native: \"Lietuvi\\u0173\",\n  },\n  ltg: {\n    English: \"Latgalian\",\n    native: \"Latgalie\\u0161u valoda\",\n  },\n  lv: {\n    English: \"Latvian\",\n    native: \"Latvie\\u0161u\",\n  },\n  mai: {\n    English: \"Maithili\",\n    native:\n      \"\\u092e\\u0948\\u0925\\u093f\\u0932\\u0940 \\u09ae\\u09c8\\u09a5\\u09bf\\u09b2\\u09c0\",\n  },\n  mi: {\n    English: \"Maori (Aotearoa)\",\n    native: \"M\\u0101ori (Aotearoa)\",\n  },\n  mk: {\n    English: \"Macedonian\",\n    native: \"\\u041c\\u0430\\u043a\\u0435\\u0434\\u043e\\u043d\\u0441\\u043a\\u0438\",\n  },\n  mn: {\n    English: \"Mongolian\",\n    native: \"\\u041c\\u043e\\u043d\\u0433\\u043e\\u043b\",\n  },\n  mr: {\n    English: \"Marathi\",\n    native: \"\\u092e\\u0930\\u093e\\u0920\\u0940\",\n  },\n  ms: {\n    English: \"Malay\",\n    native: \"Melayu\",\n  },\n  my: {\n    English: \"Burmese\",\n    native: \"\\u1019\\u103c\\u1014\\u103a\\u1019\\u102c\\u1018\\u102c\\u101e\\u102c\",\n  },\n  \"nb-NO\": {\n    English: \"Norwegian (Bokm\\u00e5l)\",\n    native: \"Norsk bokm\\u00e5l\",\n  },\n  \"ne-NP\": {\n    English: \"Nepali\",\n    native: \"\\u0928\\u0947\\u092a\\u093e\\u0932\\u0940\",\n  },\n  \"nn-NO\": {\n    English: \"Norwegian (Nynorsk)\",\n    native: \"Norsk nynorsk\",\n  },\n  nl: {\n    English: \"Dutch\",\n    native: \"Nederlands\",\n  },\n  nr: {\n    English: \"Ndebele, South\",\n    native: \"isiNdebele\",\n  },\n  nso: {\n    English: \"Northern Sotho\",\n    native: \"Sepedi\",\n  },\n  oc: {\n    English: \"Occitan (Lengadocian)\",\n    native: \"occitan (lengadocian)\",\n  },\n  or: {\n    English: \"Odia\",\n    native: \"\\u0b13\\u0b21\\u0b3c\\u0b3f\\u0b06\",\n  },\n  pa: {\n    English: \"Punjabi\",\n    native: \"\\u0a2a\\u0a70\\u0a1c\\u0a3e\\u0a2c\\u0a40\",\n  },\n  \"pa-IN\": {\n    English: \"Punjabi (India)\",\n    native: \"\\u0a2a\\u0a70\\u0a1c\\u0a3e\\u0a2c\\u0a40 (\\u0a2d\\u0a3e\\u0a30\\u0a24)\",\n  },\n  pl: {\n    English: \"Polish\",\n    native: \"Polski\",\n  },\n  \"pt-BR\": {\n    English: \"Portuguese (Brazilian)\",\n    native: \"Portugu\\u00eas (do\\u00a0Brasil)\",\n  },\n  \"pt-PT\": {\n    English: \"Portuguese (Portugal)\",\n    native: \"Portugu\\u00eas (Europeu)\",\n  },\n  rm: {\n    English: \"Romansh\",\n    native: \"rumantsch\",\n  },\n  ru: {\n    English: \"Russian\",\n    native: \"\\u0420\\u0443\\u0441\\u0441\\u043a\\u0438\\u0439\",\n  },\n  rw: {\n    English: \"Kinyarwanda\",\n    native: \"Ikinyarwanda\",\n  },\n  sa: {\n    English: \"Sanskrit\",\n    native: \"\\u0938\\u0902\\u0938\\u094d\\u0915\\u0943\\u0924\",\n  },\n  sat: {\n    English: \"Santali\",\n    native: \"\\u0938\\u0902\\u0924\\u093e\\u0932\\u0940\",\n  },\n  sah: {\n    English: \"Sakha\",\n    native: \"\\u0421\\u0430\\u0445\\u0430\\u043b\\u044b\\u044b\",\n  },\n  si: {\n    English: \"Sinhala\",\n    native: \"\\u0dc3\\u0dd2\\u0d82\\u0dc4\\u0dbd\",\n  },\n  sk: {\n    English: \"Slovak\",\n    native: \"sloven\\u010dina\",\n  },\n  sl: {\n    English: \"Slovenian\",\n    native: \"Sloven\\u0161\\u010dina\",\n  },\n  \"sr-Cyrl\": {\n    English: \"Serbian\",\n    native: \"\\u0421\\u0440\\u043f\\u0441\\u043a\\u0438\",\n  },\n  ss: {\n    English: \"Siswati\",\n    native: \"siSwati\",\n  },\n  st: {\n    English: \"Southern Sotho\",\n    native: \"Sesotho\",\n  },\n  \"sv-SE\": {\n    English: \"Swedish\",\n    native: \"Svenska\",\n  },\n  \"ta-IN\": {\n    English: \"Tamil (India)\",\n    native:\n      \"\\u0ba4\\u0bae\\u0bbf\\u0bb4\\u0bcd (\\u0b87\\u0ba8\\u0bcd\\u0ba4\\u0bbf\\u0baf\\u0bbe)\",\n  },\n  \"ta-LK\": {\n    English: \"Tamil (Sri Lanka)\",\n    native:\n      \"\\u0ba4\\u0bae\\u0bbf\\u0bb4\\u0bcd (\\u0b87\\u0bb2\\u0b99\\u0bcd\\u0b95\\u0bc8)\",\n  },\n  th: {\n    English: \"Thai\",\n    native: \"\\u0e44\\u0e17\\u0e22\",\n  },\n  tr: {\n    English: \"Turkish\",\n    native: \"T\\u00fcrk\\u00e7e\",\n  },\n  trs: {\n    English: \"Triqui\",\n    native: \"Triqui\",\n  },\n  ts: {\n    English: \"Tsonga\",\n    native: \"Xitsonga\",\n  },\n  tsz: {\n    English: \"Pur\\u00e9pecha\",\n    native: \"Pur\\u00e9pecha\",\n  },\n  \"tt-RU\": {\n    English: \"Tatar\",\n    native: \"Tatar\\u00e7a\",\n  },\n  uk: {\n    English: \"Ukrainian\",\n    native: \"\\u0423\\u043a\\u0440\\u0430\\u0457\\u043d\\u0441\\u044c\\u043a\\u0430\",\n  },\n  ur: {\n    English: \"Urdu\",\n    native: \"\\u0627\\u064f\\u0631\\u062f\\u0648\",\n  },\n  uz: {\n    English: \"Uzbek\",\n    native: \"O\\u02bbzbek tili\",\n  },\n  ve: {\n    English: \"Venda\",\n    native: \"Tshiven\\u1e13a\",\n  },\n  vi: {\n    English: \"Vietnamese\",\n    native: \"Ti\\u1ebfng Vi\\u1ec7t\",\n  },\n  \"x-testing\": {\n    English: \"Testing\",\n    native: \"\\u0166\\u1e17\\u015f\\u0167\\u012b\\u019e\\u0260\",\n  },\n  \"zh-CN\": {\n    English: \"Chinese (Simplified)\",\n    native: \"\\u4e2d\\u6587 (\\u7b80\\u4f53)\",\n  },\n  \"zh-TW\": {\n    English: \"Chinese (Traditional)\",\n    native: \"\\u6b63\\u9ad4\\u4e2d\\u6587 (\\u7e41\\u9ad4)\",\n  },\n};\n"],"names":["LANGUAGES","Map","Object","entries","LANGUAGES_RAW","map","locale","data","toLowerCase","FallbackLink","url","useParams","location","useLocation","React","fallbackCheckURL","setFallbackCheckURL","useSWR","fetch","response","ok","endsWith","json","doc","jsonURL","jsonResponse","status","Error","revalidateOnFocus","error","document","includes","enUSURL","replace","type","extraClasses","toString","get","English","className","href","mdn_url","title","module","exports","ach","native","ak","an","ar","as","ast","azz","be","bg","bm","bn","br","brx","bs","ca","cak","csb","cy","da","dbg","de","dsb","el","eo","es","et","eu","fa","fi","fr","ga","gd","gl","gn","gu","he","hi","hsb","hu","ia","id","is","it","ja","kab","kk","km","kn","ko","kok","ku","ks","la","lg","lij","lo","lt","ltg","lv","mai","mi","mk","mn","mr","ms","my","nl","nr","nso","oc","or","pa","pl","rm","ru","rw","sa","sat","sah","si","sk","sl","ss","st","th","tr","trs","ts","tsz","uk","ur","uz","ve","vi"],"sourceRoot":""}