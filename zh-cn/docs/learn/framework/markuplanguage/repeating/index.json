{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{},"title":"列表渲染","mdn_url":"/zh-CN/docs/Learn/Framework/MarkupLanguage/Repeating","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":null,"title":null,"isH3":false,"content":"<p>\n  我们经常需要渲染列表，这个时候我们可以在需要重复的标签上使用 <code>tt:for</code>。\n  默认会在作用域内创建当前下标 <code>index</code> 变量和当前值 <code>item</code> 变量。\n</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{array}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>{{index}}: {{item.message}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<blockquote>\n  <p><code>tt:for=\"{{array}}\"</code> 不能简写为 <code>tt:for=\"array\"</code> 也不能在 <code>{{ }}</code> 左右添加任何其他字符串，否则会被认为字符串循环而不是数组循环，产生预期外行为。</p>\n</blockquote>"}},{"type":"prose","value":{"id":"自定义循环变量名","title":"自定义循环变量名","isH3":false,"content":"<p>\n  当存在多重嵌套循环的时候，默认情况下，内部的 <code>index</code>/<code>item</code> 变量会覆盖外面的变量。当希望可以在内部访问到外部的变量的时候，可以使用 <code>tt:for-item</code> 修改当前循环元素的变量名以及 <code>tt:for-index</code> 修改当前循环下标的变量名。\n  也可以用于修改单层循环的默认变量名。\n</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{array}}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for-index</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>idx<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for-item</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>itemName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>{{idx}}: {{itemName.message}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<blockquote>\n  <p><code>tt:for-item</code> 和 <code>tt:for-index</code> 均不支持动态插值表达式，只接受字符串</p>\n</blockquote>"}},{"type":"prose","value":{"id":"多节点渲染","title":"多节点渲染","isH3":false,"content":"<p>将 tt:for 用在 <code>&lt;block/&gt;</code> 标签上，以渲染一个包含多节点的结构块。<code>&lt;block/&gt;</code> 标签不会产生实际存在的标签。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>block</span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{[1, 2, 3]}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>{{index}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>{{item}}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>block</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"状态维护","title":"状态维护","isH3":false,"content":"<p>默认情况下，列表更新的时候会尝试根据索引位置复用之前的组件。这种模式是最高效的，但只适用于不依赖子组件状态或临时标签状态（例如 input 输入的值）的列表循环。</p>\n<p>可以通过 <code>tt:key</code> 通知 TTML 让其可以追踪每个节点的状态。</p>\n<p><code>tt:key</code> 的值以两种形式提供:</p>\n<ol>\n  <li>字符串，代表在 for 循环的 array 中 item 的某个 property，该 property 的值需要是列表中唯一的字符串或数字，不支持插值表达式。</li>\n  <li>保留关键字 <code>*this</code>，代表在 for 循环中的 item 本身，这种表示需要 item 本身是一个唯一的字符串或者数字。</li>\n</ol>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>some-component</span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{array}}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>key</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>id<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>some-component</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"以字符循环","title":"以字符循环","isH3":false,"content":"<p>当 <code>tt:for</code> 接收到一个字符串的时候，会按照字符进行循环。其中 <code>item</code> 表示为当前字符，而 <code>index</code> 则表示为字符所在的位置索引。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\"><span class=\"token namespace\">tt:</span>for</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>hello<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>{{item}}-<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>会按照入参的字符串渲染为 <code>h-e-l-l-o-</code>。</p>"}}],"toc":[{"text":"自定义循环变量名","id":"自定义循环变量名"},{"text":"多节点渲染","id":"多节点渲染"},{"text":"状态维护","id":"状态维护"},{"text":"以字符循环","id":"以字符循环"}],"summary":"我们经常需要渲染列表，这个时候我们可以在需要重复的标签上使用 tt:for。\n  默认会在作用域内创建当前下标 index 变量和当前值 item 变量。","popularity":0,"modified":null,"other_translations":[{"title":"List rendering","locale":"en-US","native":"English (US)"}],"source":{"folder":"zh-cn/learn/framework/markuplanguage/repeating","github_url":"https://github.com/mdn/content/blob/main/files/zh-cn/learn/framework/markuplanguage/repeating/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"列表渲染","parents":[{"uri":"/zh-CN/docs/Learn/Framework/MarkupLanguage","title":"Markup Language"},{"uri":"/zh-CN/docs/Learn/Framework/MarkupLanguage/Repeating","title":"列表渲染"}],"pageTitle":"列表渲染 | MDN","noIndexing":false}}