{"doc":{"isMarkdown":true,"isTranslated":false,"isActive":true,"flaws":{"macros":[{"id":"macro0","fixable":false,"suggestion":null,"explanation":"Unknown macro handlername","name":"MacroNotFoundError","error":{},"errorStack":"ReferenceError: Unknown macro handlername\n    at Templates.render (/home/runner/work/document/document/node_modules/@mdn/yari/kumascript/src/templates.js:100:13)\n    at render (/home/runner/work/document/document/node_modules/@mdn/yari/kumascript/src/render.js:225:48)\n    at Object.renderFromURL [as render] (/home/runner/work/document/document/node_modules/@mdn/yari/kumascript/index.js:75:40)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async buildDocument (/home/runner/work/document/document/node_modules/@mdn/yari/build/index.js:307:29)\n    at async buildDocumentInteractive (/home/runner/work/document/document/node_modules/@mdn/yari/build/cli.js:46:29)\n    at async buildDocuments (/home/runner/work/document/document/node_modules/@mdn/yari/build/cli.js:126:9)\n    at async Se._action (/home/runner/work/document/document/node_modules/@mdn/yari/build/cli.js:340:60)\n    at async Se.run (/home/runner/work/document/document/node_modules/@caporal/core/dist/index.js:1:27579)\n    at async Te._run (/home/runner/work/document/document/node_modules/@caporal/core/dist/index.js:1:32257)","offset":5,"line":104,"column":46,"macroName":"handlerName","sourceContext":"  102 | </pre>\n  103 | <p>同时事件绑定的值也可以是一个数据绑定，如：</p>\n  104 | <pre class=\"brush: html\">&#x3C;view bindtap=\"{{handlerName}}\">\n-----------------------------------------------------^\n  105 |   &#x3C;text>Click me!&#x3C;/text>\n  106 | &#x3C;/view>","fatal":true,"filepath":"/home/runner/work/document/document/files/zh-cn/learn/framework/event/index.md"}]},"title":"事件","mdn_url":"/zh-CN/docs/Learn/Framework/Event","locale":"zh-CN","native":"中文 (简体)","sidebarHTML":"","body":[{"type":"prose","value":{"id":"什么是事件","title":"什么是事件","isH3":false,"content":"<ul>\n  <li>事件是视图层到逻辑层的通讯方式。</li>\n  <li>事件可以将用户的行为反馈到逻辑层进行处理。</li>\n  <li>事件可以绑定在组件上，当达到触发事件，就会执行逻辑层中对应的事件处理函数。</li>\n  <li>事件对象可以携带额外信息，如 <code>id</code>, <code>dataset</code>, <code>touches</code>。</li>\n</ul>"}},{"type":"prose","value":{"id":"事件分类","title":"事件分类","isH3":false,"content":"<p>事件分为冒泡事件和非冒泡事件：</p>\n<ol>\n  <li>冒泡事件：当一个组件上的事件被触发后，该事件会向父节点传递，父节点也会收到一样的事件。冒泡事件列表如下：</li>\n</ol>\n<div class=\"table-scroll\"><table>\n  <thead>\n    <tr>\n      <th>类型</th>\n      <th>触发条件</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>touchstart</td>\n      <td>手指触摸动作开始</td>\n    </tr>\n    <tr>\n      <td>touchmove</td>\n      <td>手指触摸后移动</td>\n    </tr>\n    <tr>\n      <td>touchend</td>\n      <td>手指触摸动作结束</td>\n    </tr>\n    <tr>\n      <td>tap</td>\n      <td>手指触摸后马上离开</td>\n    </tr>\n    <tr>\n      <td>transitionend</td>\n      <td>会在 TTSS transition动画结束后触发</td>\n    </tr>\n    <tr>\n      <td>animationstart</td>\n      <td>会在一个 TTSS animation 动画开始时触发</td>\n    </tr>\n    <tr>\n      <td>animationend</td>\n      <td>会在一个 TTSS animation 动画完成时触发</td>\n    </tr>\n  </tbody>\n</table></div>\n<ol start=\"2\">\n  <li>非冒泡事件：当一个组件上的事件被触发后，该事件不会向父节点传递。</li>\n</ol>"}},{"type":"prose","value":{"id":"绑定事件","title":"绑定事件","isH3":false,"content":"<p>事件绑定的写法类似于组件的属性，如：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tapTest<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-hi</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>world<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>tapName<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>Click me!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: javascript notranslate\"><code><span class=\"token function\">Block</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">tapName</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<p>如果用户点击这个 view ，则页面的 <code>handleTap</code> 会被调用。</p>\n<p>可以看到在组件上以 <code>bind</code> 开头的属性都是用于绑定事件监听的。例如 <code>bindtap</code> 绑定 <code>tap</code> 事件，而 <code>bindtouchmove</code> 则绑定 <code>touchmove</code> 事件。属性所设置的值为接受此事件的实例上的方法名称。如 <code>tapName</code>。</p>\n<p>上面的 <code>console.log</code> 打印出来的 event 对象的信息大致如下：</p>\n<div class=\"code-example\"><pre class=\"brush: javascript notranslate\"><code><span class=\"token punctuation\">{</span>\n  <span class=\"token string-property property\">\"type\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"tap\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"timeStamp\"</span><span class=\"token operator\">:</span><span class=\"token number\">895</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"target\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tapTest\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"dataset\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"hi\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"world\"</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"currentTarget\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"tapTest\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"dataset\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"hi\"</span><span class=\"token operator\">:</span><span class=\"token string\">\"world\"</span> <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"detail\"</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token string-property property\">\"x\"</span><span class=\"token operator\">:</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span> <span class=\"token string-property property\">\"y\"</span><span class=\"token operator\">:</span><span class=\"token number\">14</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"touches\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n      <span class=\"token string-property property\">\"identifier\"</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"pageX\"</span><span class=\"token operator\">:</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"pageY\"</span><span class=\"token operator\">:</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"clientX\"</span><span class=\"token operator\">:</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span>\n      <span class=\"token string-property property\">\"clientY\"</span><span class=\"token operator\">:</span><span class=\"token number\">14</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  <span class=\"token string-property property\">\"changedTouches\"</span><span class=\"token operator\">:</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span>\n    <span class=\"token string-property property\">\"identifier\"</span><span class=\"token operator\">:</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"pageX\"</span><span class=\"token operator\">:</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"pageY\"</span><span class=\"token operator\">:</span><span class=\"token number\">14</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"clientX\"</span><span class=\"token operator\">:</span><span class=\"token number\">53</span><span class=\"token punctuation\">,</span>\n    <span class=\"token string-property property\">\"clientY\"</span><span class=\"token operator\">:</span><span class=\"token number\">14</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<p>同时事件绑定的值也可以是一个数据绑定，如：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>{{handlerName}}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>Click me!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<p>此时，页面的 <code>this.data.handlerName</code> 必须是一个字符串，指定事件处理函数名；如果它是个空字符串，则这个绑定会失效（可以利用这个特性来暂时禁用一些事件）。</p>"}},{"type":"prose","value":{"id":"绑定并阻止事件冒泡","title":"绑定并阻止事件冒泡","isH3":true,"content":"<p>除 <code>bind</code> 外，也可以用 <code>catch</code> 来绑定事件。与 <code>bind</code> 不同， <code>catch</code> 会阻止事件向上冒泡。</p>\n<p>例如在下边这个例子中，点击 inner view 会先后调用<code>handleTap3</code>和<code>handleTap2</code>(因为tap事件会冒泡到 middle view，而 middle view 阻止了 tap 事件冒泡，不再向父节点传递)，点击 middle view 会触发<code>handleTap2</code>，点击 outer view 会触发<code>handleTap1</code>。</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>outer<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>outer view<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>middle<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">catchtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap2<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>middle view<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>inner<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>handleTap3<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>inner view<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>"}},{"type":"prose","value":{"id":"事件详解","title":"事件详解","isH3":false,"content":""}},{"type":"prose","value":{"id":"事件对象","title":"事件对象","isH3":true,"content":"<p>如无特殊说明，当组件触发事件时，逻辑层绑定该事件的处理函数会收到一个事件对象。</p>\n<h4 id=\"baseevent_基础事件对象属性列表：\">BaseEvent 基础事件对象属性列表：</h4>\n<div class=\"table-scroll\"><table>\n  <thead>\n    <tr>\n      <th>属性</th>\n      <th>类型</th>\n      <th>说明</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>type</td>\n      <td>String</td>\n      <td>事件类型</td>\n    </tr>\n    <tr>\n      <td>timeStamp</td>\n      <td>Integer</td>\n      <td>事件生成时的时间戳</td>\n    </tr>\n    <tr>\n      <td>target</td>\n      <td>Object</td>\n      <td>触发事件的组件的一些属性值集合</td>\n    </tr>\n    <tr>\n      <td>currentTarget</td>\n      <td>Object</td>\n      <td>当前组件的一些属性值集合</td>\n    </tr>\n  </tbody>\n</table></div>\n<h4 id=\"customevent_自定义事件对象属性列表\">CustomEvent 自定义事件对象属性列表</h4>\n<blockquote>\n  <p>继承 BaseEvent</p>\n</blockquote>\n<div class=\"table-scroll\"><table>\n  <thead>\n    <tr>\n      <th>属性</th>\n      <th>类型</th>\n      <th>说明</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>detail</td>\n      <td>Object</td>\n      <td>额外的信息，不同事件所对应的值不同</td>\n    </tr>\n  </tbody>\n</table></div>\n<h4 id=\"touchevent_触摸事件对象属性列表\">TouchEvent 触摸事件对象属性列表</h4>\n<blockquote>\n  <p>继承 BaseEvent</p>\n</blockquote>\n<div class=\"table-scroll\"><table>\n  <thead>\n    <tr>\n      <th>属性</th>\n      <th>类型</th>\n      <th>说明</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>touches</td>\n      <td>Array</td>\n      <td>触摸事件，当前停留在屏幕中的触摸点信息的数组</td>\n    </tr>\n    <tr>\n      <td>changedTouches</td>\n      <td>Array</td>\n      <td>触摸事件，当前变化的触摸点信息的数组</td>\n    </tr>\n  </tbody>\n</table></div>\n<blockquote>\n  <p>PC浏览器模式下，会基于鼠标事件模拟 <code>touch</code> 事件</p>\n</blockquote>"}},{"type":"prose","value":{"id":"事件对象属性","title":"事件对象属性","isH3":true,"content":"<h4 id=\"target\"><code>target</code></h4>\n<p>触发事件的组件的一些属性值集合;</p>\n<div class=\"table-scroll\"><table>\n  <thead>\n    <tr>\n      <th>属性</th>\n      <th>类型</th>\n      <th>说明</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>id</td>\n      <td>String</td>\n      <td>事件源组件的 id</td>\n    </tr>\n    <tr>\n      <td>dataset</td>\n      <td>Object</td>\n      <td>事件源组件上由 data-开头的自定义属性组成的集合</td>\n    </tr>\n  </tbody>\n</table></div>\n<h4 id=\"currenttarget\"><code>currentTarget</code></h4>\n<p>绑定事件处理函数的组件的一些属性值集合;</p>\n<div class=\"table-scroll\"><table>\n  <thead>\n    <tr>\n      <th>属性</th>\n      <th>类型</th>\n      <th>说明</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>id</td>\n      <td>String</td>\n      <td>当前组件的 id</td>\n    </tr>\n    <tr>\n      <td>dataset</td>\n      <td>Object</td>\n      <td>当前组件上由 data- 开头的自定义属性组成的集合</td>\n    </tr>\n  </tbody>\n</table></div>\n<h4 id=\"dataset\"><code>dataset</code></h4>\n<p>在组件中可以自定义数据，这些数据可通过事件对象的 <code>dataset</code> 属性获取。 书写方式： 以 <code>data-</code> 开头，多个单词由连字符-连接，不能有大写(大写会自动转成小写)如 <code>data-element-type</code>，最终在 <code>event.currentTarget.dataset</code> 中会将连字符转成驼峰 <code>elementType</code>。</p>\n<p>示例代码：</p>\n<div class=\"code-example\"><pre class=\"brush: html notranslate\"><code><span class=\"token comment\">&lt;!-- index.ttml --&gt;</span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>view</span> <span class=\"token attr-name\">data-alpha-beta</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">data-alphaBeta</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">bindtap</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>bindViewTap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">&gt;</span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>text</span><span class=\"token punctuation\">&gt;</span></span>DataSet Test <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>text</span><span class=\"token punctuation\">&gt;</span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>view</span><span class=\"token punctuation\">&gt;</span></span>\n</code></pre></div>\n<div class=\"code-example\"><pre class=\"brush: javascript notranslate\"><code><span class=\"token function\">Block</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  <span class=\"token literal-property property\">methods</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">bindViewTap</span><span class=\"token operator\">:</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">event</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// - 会转为驼峰写法 event.currentTarget.dataset.alphabeta === 2</span>\n      <span class=\"token comment\">// 大写会转为小写</span>\n      event<span class=\"token punctuation\">.</span>currentTarget<span class=\"token punctuation\">.</span>dataset<span class=\"token punctuation\">.</span>alphaBeta <span class=\"token operator\">===</span> <span class=\"token number\">1</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n</code></pre></div>\n<h4 id=\"detail\"><code>detail</code></h4>\n<p>自定义事件所携带的数据，如表单组件的提交事件会携带用户的输入，详见组件定义中各个事件的定义。</p>\n<h4 id=\"touches\"><code>touches</code></h4>\n<p>touches 是一个数组，每个元素为一个 Touch 对象（canvas 触摸事件中携带的 touches 是 CanvasTouch 数组）。 表示当前停留在屏幕上的触摸点。</p>\n<h5 id=\"touch_对象\">Touch 对象</h5>\n<div class=\"table-scroll\"><table>\n  <thead>\n    <tr>\n      <th>属性</th>\n      <th>类型</th>\n      <th>说明</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>identifier</td>\n      <td>String</td>\n      <td>触摸点的标识符</td>\n    </tr>\n    <tr>\n      <td>pageX, pageY</td>\n      <td>Number</td>\n      <td>距离文档左上角的距离，文档的左上角为原点 ，横向为 X 轴，纵向为 Y 轴</td>\n    </tr>\n    <tr>\n      <td>clientX, clientY</td>\n      <td>Number</td>\n      <td>距离页面可显示区域（屏幕除去导航条）左上角距离，横向为 X 轴，纵向为 Y 轴</td>\n    </tr>\n  </tbody>\n</table></div>\n<h5 id=\"canvastouch_对象\">CanvasTouch 对象</h5>\n<div class=\"table-scroll\"><table>\n  <thead>\n    <tr>\n      <th>属性</th>\n      <th>类型</th>\n      <th>说明</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>identifier</td>\n      <td>String</td>\n      <td>触摸点的标识符</td>\n    </tr>\n    <tr>\n      <td>x, y</td>\n      <td>Number</td>\n      <td>距离 Canvas 左上角的距离，Canvas 的左上角为原点 ，横向为 X 轴，纵向为 Y 轴</td>\n    </tr>\n  </tbody>\n</table></div>\n<h5 id=\"changedtouches\">changedTouches</h5>\n<p>changedTouches 数据格式同 touches。 表示有变化的触摸点，如从无变有（touchstart），位置变化（touchmove），从有变无（touchend、touchcancel）。</p>"}}],"toc":[{"text":"什么是事件","id":"什么是事件"},{"text":"事件分类","id":"事件分类"},{"text":"绑定事件","id":"绑定事件"},{"text":"事件详解","id":"事件详解"}],"summary":"事件分为冒泡事件和非冒泡事件：","popularity":0,"modified":null,"other_translations":[{"title":"Event","locale":"en-US","native":"English (US)"}],"source":{"folder":"zh-cn/learn/framework/event","github_url":"https://github.com/mdn/content/blob/main/files/zh-cn/learn/framework/event/index.md","last_commit_url":"https://github.com/mdn/content/commit/null","filename":"index.md"},"short_title":"事件","parents":[{"uri":"/zh-CN/docs/Learn/Framework/Event","title":"事件"}],"pageTitle":"事件 | MDN","noIndexing":false}}